{"version":3,"sources":["Components/Nav/context/mainContext.js","Components/Nav/styles/fonts.js","Components/Nav/styles/theme.js","Components/Nav/styles/GlobalStyle.js","Components/Nav/icons/formattedIcons.js","Components/Nav/icons/logo.js","Components/Nav/styles/button.js","Components/Nav/styles/media.js","Components/Nav/sections/NavItems.js","Components/Nav/nav.js","Components/common/snack.js","Components/Nav/RecNav.js","Components/Nav/index.js","Components/JobCard/index.js","Components/Hero/SideCard.js","Components/Hero/index.js","Components/Main/index.js","Components/Login/index.js","Components/JobDescription/index.js","Components/SignUp/index.js","Components/a404/index.js","Components/Jobs/index.js","Components/GetInfo/index.js","Components/EditInfo/index.js","Components/Profile/index.js","Components/JobList/index.js","Components/AddJob/index.js","Components/ApplicantList/index.js","Components/MyApplications/index.js","config/routes.js","Components/Footer/index.js","Components/Nav/data.js","Components/Nav/context/mainState.js","App.js","reportWebVitals.js","index.js"],"names":["MainContext","createContext","FontFaces","css","theme","colors","darkBlue","limeGreen","brightCyan","grayishBlue","lightGrayishBlue","veryLightGray","white","fonts","PublicSans","fontSizes","xxs","xs","sm","md","lg","xl","xxl","xxxl","GlobalStyle","createGlobalStyle","FormattedIcons","name","Logo","xmlns","style","height","width","viewBox","id","className","transform","x","y","Button","styled","button","sizes","lgDesktop","mdDesktop","smDesktop","lgTablet","mdTablet","lgPhone","smPhone","xsPhone","media","Object","keys","reduce","accumulator","label","emSize","StyledContainer","li","StyledItem","a","NavItems","item","setChecked","router","useHistory","onClick","push","link","StyledContainerMobile","Paper","StyledContainerDesktop","StyledContentMenu","StyledMenuMobile","ul","StyledMenuDesktop","Nav","nav","useContext","data","name2","icons","items","useState","checked","ref","useRef","navItems","map","index","Box","type","onChange","current","htmlFor","to","Alert","props","elevation","variant","useStyles","makeStyles","root","marginTop","spacing","Snack","open","handleClose","message","sever","classes","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","grow","flexGrow","menuButton","marginRight","title","display","breakpoints","up","inputRoot","color","sectionDesktop","sectionMobile","linker","textDecoration","img","borderRadius","RecNav","mobileMoreAnchorEl","setMobileMoreAnchorEl","setOpen","snackMessage","setSnackMessage","setSever","isMobileMenuOpen","Boolean","handleLogout","setTimeout","localStorage","setItem","clear","window","location","href","reload","mobileMenuId","renderMobileMenu","Menu","anchorEl","keepMounted","transformOrigin","MenuItem","IconButton","Dashboard","edge","AddOutlined","PowerSettingsNew","AppBar","position","Toolbar","ButtonBase","image","alt","src","Tooltip","event","currentTarget","reason","NavBar","LoggedIn","user_type","getItem","paper","padding","margin","maxWidth","text","textAlign","justifyContent","maxHeight","jobPaper","salary","JobCard","jobs","error","loading","errorMessage","React","page","setPage","pageSize","setPageSize","Grid","container","Typography","placeItems","component","CircularProgress","length","array","page_size","page_number","sortedJobs","sort","b","postedOn","slice","job","direction","gutterBottom","level","_id","size","marginLeft","Pagination","count","Math","ceil","siblingCount","boundaryCount","value","FormControl","formControl","InputLabel","Select","labelId","autoFocus","target","minWidth","opacity","background","fontSize","pos","marginBottom","SideCard","Card","CardContent","CardActions","overflow","backgroundRepeat","backgroundBlendMode","backgroundSize","search","alignItems","input","flex","iconButton","fontWeight","Hero","onChangeSearch","Container","justify","InputBase","e","placeholder","inputProps","Search","Divider","minHeight","palette","secondary","backgroundImage","backgroundColor","grey","backgroundPosition","flexDirection","avatar","main","form","submit","snack","card","body","common","icon","active","circle","completed","zIndex","ColorlibConnector","withStyles","alternativeLabel","top","line","border","StepConnector","useColorlibStepIconStyles","boxShadow","ColorlibStepIcon","School","TouchApp","DynamicFeed","clsx","String","instructions","chip","chipp","flexWrap","listStyle","TabPanel","children","other","role","hidden","p","a11yProps","key","tabs","borderRight","divider","useStyle","descendingComparator","orderBy","getComparator","order","stableSort","comparator","stabilizedThis","el","headCells","numeric","disablePadding","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","primary","dark","EnhancedTableToolbar","numSelected","table","clip","actionBut","applicants","headerTitle","quill","selectField","AddJob","jobTitle","setJobTitle","EditorState","createEmpty","jobRequirements","setJobRequirements","jobApplicantsNo","setJobApplicantsNo","jobExperience","setJobExperience","jobSalary","setJobSalary","skill","setSkill","jobLocation","setJobLocation","jobApplyNote","setJobApplyNote","jobEduLevel","setJobEduLevel","jobLevel","setJobLevel","jobCategory","setJobCategory","jobDeadline","setJobDeadline","jobType","setJobType","editorState","setEditorState","chipData","setChipData","TextField","required","fullWidth","wrapperClassName","editorClassName","onEditorStateChange","preventDefault","newChip","handleChipData","Chip","onDelete","chipToDelete","chips","filter","random","description","draftToHtml","convertToRaw","getCurrentContent","requirements","applicant_no","parseInt","curr_app","accepted","experience","Date","skills","job_location","apply_note","edu_level","category","deadline","rid","config","headers","axios","post","then","res","status","console","log","catch","err","addJob","fontFamily","list","MyApplications","routes","path","email","setEmail","password","setPassword","Copyright","getFullYear","Helmet","content","CssBaseline","square","Avatar","onSubmit","Email","response","token","Contact","autoComplete","FormControlLabel","control","Checkbox","mt","fname","setFname","lname","setLname","setContact","password_r","setPasswordR","validator","isEmpty","isInt","trim","newUser","Name","params","useParams","open1","setOpen1","setJob","setLoading","setError","myApplications","setMyApplications","useEffect","get","cond","uid","handleClickOpen","handleClose1","handleApply","req","lid","name_r","handleApplied","app","format","createdAt","RenderButton","i","FormDialog","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","CardActionArea","CardMedia","durationFromNow","TableContainer","Table","Link","itemProp","orientation","dangerouslySetInnerHTML","__html","setJobs","setErrorMessage","setSearch","searchResult","setSearchResult","$gte","fixed","oldDate1","oldDate2","returnValue","moment","fixDate","fuse","Fuse","includeScore","threshold","alignContent","activeStep","setActiveStep","setName","contact","address","setAddress","dob","setDob","bio","setBio","religion","setReligion","nationality","setNationality","gender","setGender","special","setSpecial","yoe","setYoe","marital_status","setMaritalStatus","insti","starty","endy","cgpa","course","inputList","setInputList","duration","complete_date","remark","inputList2","setInputList2","chipData1","setChipData1","Address","Bio","handleChipData1","onAddInfo","Accept","handleInputChange1","onAddEdu","postRequest","alert","edu","institute","start_year","end_year","onAddTraining","traning","completion_date","handleInputChange","handleAddClick","handleAddClick1","steps","Education","splice","handleRemoveClick","Trainings","handleRemoveClick1","SKillsExperience","handleSkillSubmit","handleSpecialSubmit","Stepper","connector","Step","StepLabel","StepIconComponent","step","multiline","rows","focused","getStepContent","disabled","prevActiveStep","setAddredd","user","setUser","setEdu","setInsti","setStarty","setEndy","setCgpa","dp","setDp","tinist","setTinist","tcourse","setTcourse","setDuration","setRemark","setSkills","setValue","responseType","result","URL","createObjectURL","Tabs","newValue","Tab","RecentActors","setTraning","withTitle","training","setOrder","setOrderBy","selected","setSelected","dense","setDense","rowsPerPage","setRowsPerPage","AlertDialog","row","n","onDeleteJob","emptyRows","min","rowCount","TableBody","hover","tabIndex","scope","pathname","state","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","Switch","setApplicants","onSetStatus","appl","oldStatus","Status","set","DateofJoining","applied_on","apps","setApps","date","ErrorOutlineSharp","gridRowStart","gridRowEnd","Footer","Facebook","Instagram","LinkedIn","MainState","setState","Provider","footer","alignSelf","App","prefersDarkMode","useMediaQuery","useMemo","createTheme","setLoggedIn","userType","setUserType","ThemeProvider","div","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9b48bb7.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst MainContext = createContext();\r\n\r\nexport default MainContext;\r\n","import { css } from \"styled-components\";\r\n\r\n// import PublicSansBoldTTF from \"fonts/PublicSans/PublicSans-Bold.ttf\";\r\n// import PublicSansBoldWOFF from \"public/fonts/PublicSans/PublicSans-Bold.woff\";\r\n// import PublicSansBoldWOFF2 from \"public/fonts/PublicSans/PublicSans-Bold.woff2\";\r\n// import PublicSansLightTTF from \"public/fonts/PublicSans/PublicSans-Light.ttf\";\r\n// import PublicSansLightWOFF from \"public/fonts/PublicSans/PublicSans-Light.woff\";\r\n// import PublicSansLightWOFF2 from \"public/fonts/PublicSans/PublicSans-Light.woff2\";\r\n// import PublicSansRegularTTF from \"public/fonts/PublicSans/PublicSans-Regular.ttf\";\r\n// import PublicSansRegularWOFF from \"public/fonts/PublicSans/PublicSans-Regular.woff\";\r\n// import PublicSansRegularWOFF2 from \"public/fonts/PublicSans/PublicSans-Regular.woff2\";\r\n\r\nconst FontFaces = css`\r\n\r\n`;\r\n\r\nexport default FontFaces;\r\n// @font-face {\r\n//   font-family: \"Public Sans\";\r\n//   src: url(${PublicSansLightWOFF2}),\r\n//     url(${PublicSansLightWOFF}) format(\"woff\"),\r\n//     url(${PublicSansLightTTF}) format(\"truetype\");\r\n//   font-weight: 300;\r\n//   font-style: normal;\r\n// }\r\n// @font-face {\r\n//   font-family: \"Public Sans\";\r\n//   src: url(${PublicSansRegularWOFF2}) format(\"woff2\"),\r\n//     url(${PublicSansRegularWOFF}) format(\"woff\"),\r\n//     url(${PublicSansRegularTTF}) format(\"truetype\");\r\n//   font-weight: 400;\r\n//   font-style: normal;\r\n// }\r\n// @font-face {\r\n//   font-family: \"Public Sans\";\r\n//   src: url(${PublicSansBoldWOFF2}) format(\"woff2\"),\r\n//     url(${PublicSansBoldWOFF}) format(\"woff\"),\r\n//     url(${PublicSansBoldTTF}) format(\"truetype\");\r\n//   font-weight: 700;\r\n//   font-style: normal;\r\n// }","const theme = {\r\n    colors: {\r\n      darkBlue: \"#2D314D\",\r\n      limeGreen: \"#30D35C\",\r\n      brightCyan: \"#2AB6D9\",\r\n      grayishBlue: \"#9698A5\",\r\n      lightGrayishBlue: \"#F3F4F6\",\r\n      veryLightGray: \"#F9F9F9\",\r\n      white: \"#FFFFFF\",\r\n      \r\n    },\r\n  \r\n    fonts: {\r\n      PublicSans:\r\n        \"Public Sans, San Francisco, SF Pro Text, -apple-system, system-ui, BlinkMacSystemFont, Roboto, Helvetica Neue, Segoe UI, Arial, sans-serif\",\r\n    },\r\n  \r\n    fontSizes: {\r\n      xxs: \"10px\",\r\n      xs: \"12px\",\r\n      sm: \"14px\",\r\n      md: \"16px\",\r\n      lg: \"18px\",\r\n      xl: \"22px\",\r\n      xxl: \"32px\",\r\n      xxxl: \"40px\",\r\n    },\r\n  };\r\n  \r\n  export default theme;\r\n  ","import { createGlobalStyle } from \"styled-components\";\r\nimport FontFaces from \"./fonts\";\r\nimport theme from \"./theme\";\r\n\r\nconst { colors, fontSizes, fonts } = theme;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${FontFaces}\r\n\r\nhtml {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n   \r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  \r\n  body {\r\n    margin: 0;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    overflow-x: hidden;\r\n    display: grid;\r\n    grid-template-rows: 1fr auto;\r\n    font-family: ${fonts.PublicSans};\r\n    font-size: ${fontSizes.lg};\r\n  }\r\n\r\n  a {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    text-decoration-skip-ink: auto;\r\n    color: inherit;\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      color: ${colors.grayishBlue};\r\n    }\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    color: ${colors.darkBlue};\r\n  }\r\n\r\n  p {\r\n    color:${colors.grayishBlue}\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    vertical-align: middle;\r\n  }\r\n\r\n   button {\r\n    cursor: pointer;\r\n    border: 0;\r\n    border-radius: 0;\r\n    &:focus,\r\n    &:active {\r\n      outline-color: ${colors.limeGreen};\r\n    }\r\n  }\r\n\r\n nav ul {\r\n      padding: 0;\r\n      margin: 0;\r\n      list-style: none;\r\n      li {\r\n        position: relative;\r\n      }\r\n  }\r\n  \r\n  `;\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport {\n  Logo,\n} from \"../icons\";\nimport IconClose from '@material-ui/icons/Close';\nimport MenuIcon from \"@material-ui/icons/Menu\"\n\nconst FormattedIcons = ({ name }) => {\n  switch (name) {\n    case \"IconClose\":\n      return <IconClose />;\n\n\n    case \"IconHamburger\":\n      return <MenuIcon />;\n\n\n    case \"Logo\":\n      return <Logo name={name} />;\n\n    default:\n      return null;\n  }\n};\n\nexport default FormattedIcons;\n","import React from \"react\";\n\nconst Logo = () => {\n\treturn (\n\t\t<svg  xmlns=\"http://www.w3.org/2000/svg\" style={{ height: \"auto\", width: \"120\" }} viewBox=\"0 0 288.54 111.48\">\n\t\t\t<g id=\"Layer_2\" data-name=\"Layer 2\">\n\t\t\t\t<g id=\"Layer_1-2\" data-name=\"Layer 1\">\n\t\t\t\t\t<g className=\"cls-1\">\n\t\t\t\t\t\t<text className=\"cls-2\" transform=\"translate(0 74.48) scale(0.61 1)\">\n\t\t\t\t\t\t\tRupandehi\n\t\t\t\t\t\t\t<tspan className=\"cls-3\" x=\"96.64\" y=\"0\">\n\t\t\t\t\t\t\t</tspan>\n\t\t\t\t\t\t</text>\n\t\t\t\t\t\t<text className=\"cls-4\" transform=\"translate(68.1 74.48) scale(0.61 1)\">\n\t\t\t\t\t\t\tJob\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\n\n\n\t);\n};\n\nexport default Logo;\n","import styled from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\nconst { colors, fontSizes } = theme;\r\n\r\nconst Button = styled.button`\r\n  background: linear-gradient(\r\n    to right,\r\n    ${colors.limeGreen},\r\n    ${colors.brightCyan}\r\n  );\r\n  padding: 1em 2.25em;\r\n  color: ${colors.white};\r\n  font-size: ${fontSizes.sm};\r\n  font-weight: 700;\r\n  border-radius: 35px;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import { css } from \"styled-components\";\r\n\r\nconst sizes = {\r\n  lgDesktop: 1440,\r\n  mdDesktop: 1280,\r\n  smDesktop: 1024,\r\n  lgTablet: 768,\r\n  mdTablet: 600,\r\n  lgPhone: 480,\r\n  smPhone: 374,\r\n  xsPhone: 330,\r\n};\r\n\r\n// iterate through the sizes and create a media template\r\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\r\n  // use em in breakpoints to work properly cross-browser and support users\r\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\r\n  const emSize = sizes[label] / 16;\r\n\r\n  // console.log(emSize);\r\n  accumulator[label] = (...args) => css`\r\n    @media (min-width: ${emSize}em) {\r\n      ${css(...args)};\r\n    }\r\n  `;\r\n  // console.log(accumulator);\r\n  return accumulator;\r\n}, {});\r\n\r\nexport default media;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { theme } from \"../styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { colors } = theme;\r\n\r\nconst StyledContainer = styled.li`\r\n  display: block;\r\n  text-align: center;\r\n  margin: auto;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledItem = styled.a`\r\n  // color: ${colors.grayishBlue};\r\n  padding: 1em;\r\n  border-bottom: 5px solid transparent;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: ${colors.darkBlue};\r\n    border-image: linear-gradient(\r\n        to right,\r\n        ${colors.limeGreen} 0%,\r\n        ${colors.brightCyan} 100%\r\n      )\r\n      1;\r\n  }\r\n`;\r\nconst NavItems = ({ item, setChecked }) => {\r\n  const router = useHistory();\r\n  return (\r\n    <StyledContainer>\r\n      <StyledItem\r\n        onClick={() => {\r\n          setChecked(false);\r\n          router.push(item.link);\r\n        }}\r\n      >\r\n        {item.name}\r\n      </StyledItem>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React, { useContext, useState, useRef } from \"react\";\r\nimport MainContext from \"./context/mainContext\";\r\nimport GlobalStyle from \"./styles/GlobalStyle\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { FormattedIcons, Logo } from \"./icons\";\r\nimport { theme, media, Button } from \"./styles\";\r\nimport NavItems from \"./sections/NavItems\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Paper } from \"@material-ui/core\";\r\n\r\nconst { colors } = theme;\r\nconst StyledContainerMobile = styled(Paper)`\r\n  width: 100%;\r\n  position: fixed;\r\n  color: black;\r\n  top: 0;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1.25em 5%;\r\n\r\n  & .checkbox {\r\n    display: none;\r\n  }\r\n\r\n  & .iconHamburger,\r\n  & .iconClose {\r\n    cursor: pointer;\r\n  }\r\n\r\n  & .iconHamburger:active {\r\n    transition: transform 0.3s ease;\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  & .iconClose:active {\r\n    transition: transform 0.3s ease;\r\n    transform: rotate(-90deg);\r\n  }\r\n\r\n  ${media.smDesktop`\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst StyledContainerDesktop = styled(StyledContainerMobile)`\r\n  display: none;\r\n\r\n  ${media.smDesktop`\r\n    display: flex;\r\n    padding: 0 5%;\r\n    height: 3.5em;\r\n\r\n  `}\r\n\r\n  ${media.mdDesktop`\r\n    display: flex;\r\n    padding: 0 8%;\r\n  `}\r\n\r\n   ${media.lgDesktop`\r\n    display: flex;\r\n    padding: 0 10%;\r\n  `}\r\n`;\r\n\r\nconst StyledContentMenu = styled(StyledContainerMobile)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n`;\r\n\r\nconst StyledMenuMobile = styled.ul`\r\n  // background: ${colors.white};\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  padding-top: 0.5em;\r\n  padding-bottom: 0.5em;\r\n  width: 100%;\r\n  margin-top: -5em;\r\n`;\r\n\r\nconst StyledMenuDesktop = styled(StyledMenuMobile)`\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  display: flex;\r\n  width: 60%;\r\n\r\n  ${media.mdDesktop`\r\n    width: 50%;\r\n  `}\r\n\r\n  ${media.lgDesktop`\r\n    width: 40%;\r\n  `}\r\n`;\r\n\r\nconst Nav = () => {\r\n  const { data } = useContext(MainContext);\r\n  const { nav } = data;\r\n  const { name, name2, icons, items } = nav;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const navItems = items.map((item, index) => (\r\n    <NavItems setChecked={setChecked} key={index} item={item} />\r\n  ));\r\n\r\n  return (\r\n    <Box>\r\n      <GlobalStyle />\r\n      <StyledContainerMobile>\r\n        <FormattedIcons name={name} />\r\n        <input\r\n          id=\"checkbox\"\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          ref={ref}\r\n          onChange={() => setChecked(ref.current.checked)}\r\n        />\r\n\r\n        <label htmlFor=\"checkbox\">\r\n          {checked ? (\r\n            <FormattedIcons name={icons[1].name} />\r\n          ) : (\r\n            <FormattedIcons name={icons[0].name} />\r\n          )}\r\n        </label>\r\n      </StyledContainerMobile>\r\n\r\n      {checked ? (\r\n        <StyledContentMenu>\r\n          <StyledMenuMobile>\r\n            {navItems}\r\n            <Link to=\"/signup\">\r\n              {\" \"}\r\n              <Button>Lets Go</Button>\r\n            </Link>\r\n          </StyledMenuMobile>\r\n        </StyledContentMenu>\r\n      ) : null}\r\n\r\n      <StyledContainerDesktop>\r\n        <Link to=\"/\">\r\n          <Logo name={name2} style={{ height: \"inherit\", width: \"inherit\" }} />\r\n        </Link>\r\n        <StyledMenuDesktop>{navItems}</StyledMenuDesktop>\r\n        <Link to=\"/signup\">\r\n          {\" \"}\r\n          <Button>Lets Go</Button>\r\n        </Link>\r\n      </StyledContainerDesktop>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Snack({ open, handleClose, message, sever }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={sever?sever:\"error\"}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n// import { Logo } from \"./icons\";\nimport { ButtonBase } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { AddOutlined, Dashboard, PowerSettingsNew } from \"@material-ui/icons\";\nimport Search from \"@material-ui/icons/AssignmentInd\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Snack from \"../common/snack\";\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n\n  inputRoot: {\n    color: \"inherit\",\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  linker: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n  img: {\n    width: \"auto\",\n    height: \"50px\",\n    borderRadius: \"50%\",\n  },\n}));\n\nexport default function RecNav() {\n  const classes = useStyles();\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [snackMessage, setSnackMessage] = useState(\"\");\n  const [sever, setSever] = useState(\"\");\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const handleLogout = () => {\n    setOpen(true);\n    setSnackMessage(\"Loged Out Successfully.\");\n    setSever(\"info\");\n    setTimeout(() => {\n      localStorage.setItem(\"loggedin\", false);\n      localStorage.clear();\n      window.location.href = \"/#/\";\n      window.location.reload();\n    }, 3000);\n  };\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Link to=\"/job-list\" className={classes.linker}>\n        <MenuItem>\n          <IconButton aria-label=\"to my-apps\" color=\"inherit\">\n            <Dashboard />\n          </IconButton>\n          <p>JobList</p>\n        </MenuItem>\n      </Link>\n      <Link to=\"/jobs\" className={classes.linker}>\n        <MenuItem>\n          <IconButton aria-label=\"to jobs\" color=\"inherit\">\n            <Search />\n          </IconButton>\n          <p>Jobs</p>\n        </MenuItem>\n      </Link>\n      <Link to=\"/add-job\" className={classes.linker}>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AddOutlined />\n        </IconButton>\n      </Link>\n      <MenuItem onClick={handleLogout}>\n        <IconButton aria-label=\"logout\" color=\"inherit\">\n          <PowerSettingsNew />\n        </IconButton>\n        <p>Logout</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Link to=\"/\" className={classes.linker}>\n              <ButtonBase className={classes.image}>\n                <img\n                  className={classes.img}\n                  alt=\"complex\"\n                  src={\"assets/images/rupandehijob.jpg\"}\n                />\n              </ButtonBase>{\" \"}\n            </Link>\n          </IconButton>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Link to=\"/job-list\" className={classes.linker}>\n              <Tooltip title=\"Jobs List\">\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                  <Dashboard />\n                </IconButton>\n              </Tooltip>\n            </Link>\n            <Link to=\"/jobs\" className={classes.linker}>\n              <Tooltip title=\"Jobs\">\n                <IconButton\n                  aria-label=\"show 17 new notifications\"\n                  color=\"inherit\"\n                >\n                  <Search />\n                </IconButton>\n              </Tooltip>\n            </Link>\n            <Link to=\"/add-job\" className={classes.linker}>\n              <Tooltip title=\"Add Job\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  aria-haspopup=\"true\"\n                  color=\"inherit\"\n                >\n                  <AddOutlined />\n                </IconButton>\n              </Tooltip>\n            </Link>\n            <Tooltip title=\"Logout\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={handleLogout}\n              >\n                <PowerSettingsNew />\n              </IconButton>\n            </Tooltip>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      <Snack\n        handleClose={handleClose}\n        open={open}\n        message={snackMessage}\n        sever={sever}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n// import { Logo } from \"./icons\";\nimport { ButtonBase } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"./nav\";\nimport { Dashboard, PowerSettingsNew } from \"@material-ui/icons\";\nimport Search from \"@material-ui/icons/AssignmentInd\";\nimport { Tooltip } from \"@material-ui/core\";\nimport RecNav from \"./RecNav\";\nimport Snack from \"../common/snack\";\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n\n  inputRoot: {\n    color: \"inherit\",\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  linker: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n  img: {\n    width: \"auto\",\n    height: \"50px\",\n    borderRadius: \"50%\",\n  },\n}));\n\nexport default function NavBar({ LoggedIn, user_type }) {\n  const classes = useStyles();\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [snackMessage, setSnackMessage] = useState(\"\");\n  const [sever, setSever] = useState(\"\");\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  if (!LoggedIn && !localStorage.getItem(\"loggedin\")) {\n    return <Nav />;\n  }\n  if (LoggedIn && user_type === \"R\") {\n    return <RecNav />;\n  }\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const handleLogout = () => {\n    setOpen(true);\n    setSnackMessage(\"Loged Out Successfully.\");\n    setSever(\"info\");\n    setTimeout(() => {\n      localStorage.setItem(\"loggedin\", false);\n      localStorage.clear();\n      window.location.href = \"/#/\";\n      window.location.reload();\n    }, 3000);\n  };\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Link to=\"/my-apps\" className={classes.linker}>\n        <MenuItem>\n          <IconButton aria-label=\"to my-apps\" color=\"inherit\">\n            <Dashboard />\n          </IconButton>\n          <p>Dashboard</p>\n        </MenuItem>\n      </Link>\n      <Link to=\"/jobs\" className={classes.linker}>\n        <MenuItem>\n          <IconButton aria-label=\"to jobs\" color=\"inherit\">\n            <Search />\n          </IconButton>\n          <p>Jobs</p>\n        </MenuItem>\n      </Link>\n      <Link to=\"/profile\" className={classes.linker}>\n        <MenuItem>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Link>\n      <MenuItem onClick={handleLogout}>\n        <IconButton aria-label=\"logout\" color=\"inherit\">\n          <PowerSettingsNew />\n        </IconButton>\n        <p>Logout</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Link to=\"/\" className={classes.linker}>\n              <ButtonBase className={classes.image}>\n                <img\n                  className={classes.img}\n                  alt=\"complex\"\n                  src={\"assets/images/rupandehijob.jpg\"}\n                />\n              </ButtonBase>{\" \"}\n            </Link>\n          </IconButton>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Link to=\"/my-apps\" className={classes.linker}>\n              <Tooltip title=\"Dashboard\">\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                  <Dashboard />\n                </IconButton>\n              </Tooltip>\n            </Link>\n            <Link to=\"/jobs\" className={classes.linker}>\n              <Tooltip title=\"Jobs\">\n                <IconButton\n                  aria-label=\"show 17 new notifications\"\n                  color=\"inherit\"\n                >\n                  <Search />\n                </IconButton>\n              </Tooltip>\n            </Link>\n            <Link to=\"/profile\" className={classes.linker}>\n              <Tooltip title=\"Profile\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  aria-haspopup=\"true\"\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n              </Tooltip>\n            </Link>\n            <Tooltip title=\"Logout\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={handleLogout}\n              >\n                <PowerSettingsNew />\n              </IconButton>\n            </Tooltip>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      <Snack\n        handleClose={handleClose}\n        open={open}\n        message={snackMessage}\n        sever={sever}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Pagination } from \"@material-ui/lab/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: 450,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  jobPaper: {\r\n    margin: \"10px 10px 10px 10px\",\r\n  },\r\n  linker: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n  },\r\n  salary: {\r\n    color: \"#4ee44e\",\r\n  },\r\n}));\r\n\r\nexport default function JobCard({ jobs, error, loading, errorMessage }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(1);\r\n  const [pageSize, setPageSize] = React.useState(3);\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  function paginateGood(array, page_size, page_number) {\r\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n  }\r\n\r\n  const handlePageSizeChange = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(1);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  placeItems: \"center\",\r\n                }}\r\n                variant=\"h5\"\r\n                component=\"h3\"\r\n              >\r\n                Loading...\r\n              </Typography>\r\n            </Paper>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  placeItems: \"center\",\r\n                }}\r\n                variant=\"h5\"\r\n                component=\"h3\"\r\n              >\r\n                <CircularProgress />\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                {errorMessage}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (jobs.length === 0 && !loading && !error) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                No jobs available\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n  // Sort jobs by deadline and return the first 10 jobs\r\n  const sortedJobs = jobs.sort((a, b) => {\r\n    if (a.postedOn < b.postedOn) {\r\n      return 1;\r\n    } else if (a.postedOn > b.postedOn) {\r\n      return -1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" className={classes.text}>\r\n        Recent Job listings.\r\n      </Typography>\r\n      <Grid container>\r\n        {paginateGood(sortedJobs, pageSize, page).map((job) => {\r\n          // const name = job.title.replace(/ /g, \"-\").toLowerCase();\r\n          // const jobid = job._id.slice(-4);\r\n          return (\r\n            <Grid item key={job._id} className={classes.jobPaper}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item>\r\n                    <ButtonBase className={classes.image}>\r\n                      <img\r\n                        className={classes.img}\r\n                        alt=\"complex\"\r\n                        src={\"/assets/images/rupandehi.jpg\"}\r\n                      />\r\n                    </ButtonBase>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                      <Grid item xs>\r\n                        <Typography\r\n                          color=\"primary\"\r\n                          gutterBottom\r\n                          variant=\"subtitle1\"\r\n                        >\r\n                          {job.title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                          {job.type}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          Level: {job.level}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link\r\n                          className={classes.linker}\r\n                          to={\r\n                            // `/jobs/${name}-${jobid}`\r\n                            `/jobs/${job._id}`\r\n                          }\r\n                        >\r\n                          <Button\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            variant=\"outlined\"\r\n                          >\r\n                            View Job\r\n                          </Button>\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        style={{ marginLeft: \"5px\" }}\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        Salary:\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.salary}\r\n                      >\r\n                        {job.salary}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n        <Grid item xs={12}>\r\n          <Pagination\r\n            className=\"my-3\"\r\n            count={Math.ceil(sortedJobs.length / pageSize)}\r\n            page={page}\r\n            siblingCount={1}\r\n            boundaryCount={1}\r\n            color=\"secondary\"\r\n            onChange={handlePageChange}\r\n          />\r\n          {/* Items per page */}\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">\r\n              Items per page\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={pageSize}\r\n              autoFocus\r\n              onChange={handlePageSizeChange}\r\n            >\r\n              <MenuItem value={3}>3</MenuItem>\r\n              <MenuItem value={6}>6</MenuItem>\r\n              <MenuItem value={9}>9</MenuItem>\r\n              <MenuItem value={12}>12</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    opacity: \"90%\",\r\n    background: \"#d3d3d3\",\r\n    margin:\"20px\"\r\n  },\r\n\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SideCard() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          We can get you the job you want.\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Browse for jobs below.\r\n          <br />\r\n          <Typography variant=\"h6\" component=\"strong\"> {\"We get you employed.\"}</Typography>\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Link style={{color:\"inherit\", textDecoration:\"none\"}} to={\"/jobs\"}>\r\n          <Button size=\"small\" variant=\"contained\" color=\"primary\">explore jobs</Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Divider, Container } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SideCard from \"./SideCard\";\r\nimport { InputBase, IconButton, Paper } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: \"hidden\",\r\n    height: \"300px\",\r\n    background: `url(\"/assets/images/office2.jpg\")`,\r\n    // margin: \"20px 20px 20px 20px\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundBlendMode: \"screen\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n  search: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"300px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n}));\r\n\r\nexport default function Hero({ search, onChangeSearch }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n          <Grid item>\r\n            <Grid item xs={12}>\r\n              <Typography className={classes.text} color=\"secondary\">\r\n                We make your dream come true.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Paper component=\"form\" className={classes.search}>\r\n                <InputBase\r\n                  className={classes.input}\r\n                  value={search}\r\n                  onChange={(e) => onChangeSearch(e)}\r\n                  placeholder=\"Search for Jobs\"\r\n                  inputProps={{ \"aria-label\": \"search google maps\" }}\r\n                />\r\n                <IconButton\r\n                  type=\"submit\"\r\n                  className={classes.iconButton}\r\n                  aria-label=\"search\"\r\n                >\r\n                  <Search />\r\n                </IconButton>\r\n              </Paper>{\" \"}\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid item xs={6} sm={2}>\r\n            <SideCard />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Divider } from \"@material-ui/core/\";\r\nimport JobCard from \"../JobCard\";\r\nimport Hero from \"../Hero\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Fuse from \"fuse.js\";\r\nimport { Helmet } from \"react-helmet\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    minHeight: \"75vh\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst fixDate = (list) => {\r\n  let returnValue = [];\r\n  var oldDate1;\r\n  var oldDate2;\r\n  for (var i = 0; i < list.length; i++) {\r\n    oldDate1 = new Date(list[i].deadline);\r\n    oldDate1 = moment(oldDate1).format(\"HH:mm , D-MM-YYYY\");\r\n    list[i].deadline = oldDate1;\r\n    oldDate2 = new Date(list[i].postedOn);\r\n    oldDate2 = moment(oldDate2).format(\"HH:mm , DD-MM-YYYY\");\r\n    list[i].postedOn = oldDate2;\r\n    returnValue.push(list[i]);\r\n  }\r\n  return returnValue;\r\n};\r\n\r\nexport default function Main() {\r\n  const classes = useStyles();\r\n\r\n  const [jobs, setJobs] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [searchResult, setSearchResult] = React.useState([]);\r\n  React.useEffect(() => {\r\n    // fetch jobs from /api/list/ using axios post with search as deadline\r\n    // if (localStorage.getItem(\"type\") !== \"A\") window.location.href = \"/404\";\r\n\r\n    axios\r\n      .post(\"/api/list/\", { cond: { deadline: { $gte: new Date() } } })\r\n      .then((res) => {\r\n        var fixed = fixDate(res.data);\r\n        console.log(fixed);\r\n        setJobs(fixed);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        setError(true);\r\n        setErrorMessage(err.response.data.message);\r\n      });\r\n  }, []);\r\n  const fuse = new Fuse(jobs, {\r\n    keys: [\"title\", \"level\", \"type\", \"location\", \"category\"],\r\n    includeScore: true,\r\n    threshold: 0.3,\r\n  });\r\n\r\n  const onChangeSearch = (e) => {\r\n    setSearch(e.target.value);\r\n    setSearchResult(fuse.search(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Home - Rupandehi Job</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Rupandehi Job is a job portal for the people of Rupandehi. We are a community of people who are passionate about the job market in Rupandehi.\"\r\n        />\r\n      </Helmet>\r\n      <div className={classes.root}>\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Hero search={search} onChangeSearch={onChangeSearch} />\r\n            <Divider />\r\n          </Grid>\r\n          <Divider />\r\n          <br />\r\n          <JobCard\r\n            jobs={\r\n              searchResult.length > 0\r\n                ? searchResult.map((job) => job.item)\r\n                : jobs\r\n            }\r\n            loading={loading}\r\n            error={error}\r\n            errorMessage={errorMessage}\r\n            searchResult={searchResult}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport Snack from \"../common/snack\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linker: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n  },\r\n  snack: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  // const history = useHistory()\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [snackMessage, setSnackMessage] = useState(\"\");\r\n  const [sever, setSever] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"Copyright © \"}\r\n        <Link className={classes.linker} to=\"/\" color=\"inherit\" href=\"/\">\r\n          Rupandehi Jobs\r\n        </Link>{\" \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"/api/user/login\", {\r\n        Email: email,\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        localStorage.setItem(\"type\", response.data.type);\r\n        localStorage.setItem(\"name\", response.data.name);\r\n        localStorage.setItem(\"email\", response.data.email);\r\n        localStorage.setItem(\"id\", response.data.id);\r\n        localStorage.setItem(\"contact\", response.data.Contact);\r\n        localStorage.setItem(\"loggedIn\", true);\r\n        setOpen(true);\r\n        setSnackMessage(\"Login Successful\");\r\n        setSever(\"success\");\r\n        setTimeout(() => {\r\n          if (response.data.type === \"R\") {\r\n            window.location.href = \"/#job-list\";\r\n          } else {\r\n            window.location.href = \"/#profile\";\r\n          }\r\n          window.location.reload();\r\n        }, 3000);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data) {\r\n          setOpen(true);\r\n          setSnackMessage(err.response.data);\r\n          setSever(\"error\");\r\n        }\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login - Rupandehi Job</title>\r\n        <meta name=\"description\" content=\"Login to Rupandehi Jobs\" />\r\n      </Helmet>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={onSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                value={email}\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                value={password}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link className={classes.linker} to=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link className={classes.linker} to=\"/signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                <Copyright />\r\n              </Box>\r\n            </form>\r\n\r\n            <Snack\r\n              handleClose={handleClose}\r\n              open={open}\r\n              message={snackMessage}\r\n              sever={sever}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Container,\r\n  Button,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableRow,\r\n  Link,\r\n  Grid,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Moment from \"react-moment\";\r\nimport Snack from \"../common/snack\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    minHeight: \"70vh\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    placeItems: \"center\",\r\n    margin: \"20px 20px 20px 20px\",\r\n  },\r\n  card: {\r\n    margin: \"20px\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function JobDescription() {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n  const [open1, setOpen1] = React.useState(false);\r\n  const [job, setJob] = React.useState({});\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState(\"\");\r\n  const [sever, setSever] = React.useState(\"\");\r\n  const [myApplications, setMyApplications] = React.useState([]);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // fetch from server from route /api/list/:id\r\n    var config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(`/api/list/job/${params.id}`)\r\n      .then((res) => {\r\n        setJob(res.data);\r\n        setLoading(false);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setError(true);\r\n        setLoading(false);\r\n      });\r\n    axios\r\n      .post(\"/api/appl/\", { cond: { uid: localStorage.getItem(\"id\") } }, config)\r\n      .then((res) => {\r\n        setMyApplications(res.data);\r\n      });\r\n  }, [params.id]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  function renderRequirement() {\r\n    return { __html: job.requirements };\r\n  }\r\n  function renderDescription() {\r\n    return { __html: job.description };\r\n  }\r\n  const handleApply = () => {\r\n    const req = {\r\n      rid: job.rid,\r\n      uid: localStorage.getItem(\"id\"),\r\n      lid: job._id,\r\n      title: job.title,\r\n      name_r: \"Rupandehi Job\",\r\n      salary: job.salary,\r\n    };\r\n    console.clear();\r\n    console.log(req);\r\n    var config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    };\r\n    axios\r\n      .post(\"/api/appl/add\", req, config)\r\n      .then((response) => {\r\n        console.log(response);\r\n        setSnackMessage(\"Application sent successfully\");\r\n        setSever(\"success\");\r\n        setOpen(true);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data) {\r\n          setSnackMessage(\"Error Applying\" + err.response.data);\r\n          setSever(\"error\");\r\n          setOpen(true);\r\n        }\r\n      });\r\n    setOpen1(false);\r\n  };\r\n  const handleApplied = () => {\r\n    return myApplications.map((app) =>\r\n      app.lid === job._id ? (\r\n        <TableRow key={app._id}>\r\n          <TableCell>{app.title}</TableCell>\r\n          <TableCell>{app.name_r}</TableCell>\r\n          <TableCell>{app.salary}</TableCell>\r\n          <TableCell>\r\n            <Moment format=\"YYYY/MM/DD\">{app.createdAt}</Moment>\r\n          </TableCell>\r\n        </TableRow>\r\n      ) : null\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid\r\n          style={{\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\",\r\n            placeItems: \"center\",\r\n          }}\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} style={{ width: \"250px\" }}>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                Loading...\r\n              </Typography>\r\n            </Paper>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                <CircularProgress />\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid\r\n          style={{\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\",\r\n            placeItems: \"center\",\r\n          }}\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper} style={{ width: \"250px\" }}>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                Error Getting Job\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const RenderButton = () => {\r\n    if (myApplications.length > 0) {\r\n      for (let i = 0; i < myApplications.length; i++) {\r\n        if (myApplications[i].lid === job._id) {\r\n          return (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ margin: \"10px\" }}\r\n              onClick={handleApplied}\r\n            >\r\n              Applied\r\n            </Button>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ margin: \"10px\" }}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Apply\r\n      </Button>\r\n    );\r\n  };\r\n  function FormDialog() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={open1}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Application</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to apply for this job?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose1} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleApply} color=\"primary\">\r\n              Apply\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta\r\n          name=\"description\"\r\n          content={\r\n            loading\r\n              ? \"Rupandehi Job\"\r\n              : `Job opening for ${job.title} for ${job.applicant_no} at Rupandehi Job`\r\n          }\r\n        />\r\n        <title> {!loading ? `${job.title}` : \"\"} - Rupandehi Job</title>\r\n      </Helmet>\r\n      <Box justifyContent=\"center\" className={classes.root}>\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image=\"/assets/images/rupandehijob.jpg\"\r\n              title=\"rupandehi job\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                A Reputed Company\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Lizards are a widespread group of squamate reptiles, with over\r\n                6,000 species, ranging across all continents except Antarctica\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <Box>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Container>\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" component=\"strong\">\r\n                    Basic Job Information\r\n                  </Typography>\r\n                  <Divider />\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" color=\"secondary\" component=\"p\">\r\n                    {job.title}\r\n                  </Typography>\r\n                  {\"\\t \\t \\t\"}\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    color=\"textSecondary\"\r\n                    component=\"span\"\r\n                  >\r\n                    Deadline:\r\n                    <Moment durationFromNow>{job.deadline}</Moment>\r\n                  </Typography>\r\n                  <TableContainer component={Paper}>\r\n                    <Table>\r\n                      <tbody>\r\n                        <TableRow>\r\n                          <TableCell width=\"33%\">Job Category</TableCell>\r\n                          <TableCell width=\"3%\">:</TableCell>\r\n                          <TableCell width=\"64%\">\r\n                            <Link href=\"#\">\r\n                              {job.category}\r\n                            </Link>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>Job Level</TableCell>\r\n                          <TableCell>:</TableCell>\r\n                          <TableCell>\r\n                            <Link href=\"/job-level/mid_level/\">\r\n                              {job.level}\r\n                            </Link>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>No. of Vacancy/s</TableCell>\r\n                          <TableCell>:</TableCell>\r\n                          <TableCell>\r\n                            [ <strong>{job.applicant_no}</strong> ]\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>Employment Type</TableCell>\r\n                          <TableCell>:</TableCell>\r\n                          <TableCell itemProp=\"employmentType\">\r\n                            {job.type}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>Job Location</TableCell>\r\n                          <TableCell>:</TableCell>\r\n                          <TableCell>\r\n                            <span>{job.job_location}</span>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>Offered Salary</TableCell>\r\n                          <TableCell>:</TableCell>\r\n                          <TableCell>{job.salary}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell>\r\n                            Apply Before<span>(Deadline)</span>\r\n                          </TableCell>\r\n                          <TableCell>:</TableCell>\r\n                          <TableCell>\r\n                            <Moment format=\"DD-MM-YYYY, hh:mm:ss\">\r\n                              {job.deadline}\r\n                            </Moment>\r\n                            <Divider orientation=\"vertical\" />\r\n                            <Moment durationFromNow>{job.deadline}</Moment>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </tbody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </CardContent>\r\n              </Container>\r\n            </CardContent>\r\n            <Divider className=\"mt-0 mb-4\" />\r\n\r\n            <CardContent>\r\n              <Container>\r\n                <CardContent>\r\n                  {\" \"}\r\n                  <Typography variant=\"h5\" component=\"strong\">\r\n                    Job Specification\r\n                  </Typography>{\" \"}\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Table>\r\n                    <tbody>\r\n                      <TableRow>\r\n                        <TableCell width=\"33%\">Education Level</TableCell>\r\n                        <TableCell width=\"3%\">:</TableCell>\r\n                        <TableCell width=\"64%\">\r\n                          <span itemProp=\"educationRequirements\">\r\n                            {job.edu_level}\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell width=\"33%\">Experience Required</TableCell>\r\n                        <TableCell width=\"3%\">:</TableCell>\r\n                        <TableCell width=\"64%\">\r\n                          <span itemProp=\"experienceRequirements\">\r\n                            {job.experience}\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell width=\"33%\">\r\n                          Professional Skill Required\r\n                        </TableCell>\r\n                        <TableCell width=\"3%\">:</TableCell>\r\n                        <TableCell width=\"64%\">\r\n                          <Typography\r\n                            variant=\"body1\"\r\n                            component=\"span\"\r\n                            itemProp=\"skills\"\r\n                          >\r\n                            {job.skills &&\r\n                              job.skills.map((skill) => (\r\n                                <span key={skill}>\r\n                                  <Typography\r\n                                    color=\"secondary\"\r\n                                    variant=\"subtitle2\"\r\n                                    component=\"span\"\r\n                                  >\r\n                                    {skill}{\" \"}\r\n                                  </Typography>\r\n                                </span>\r\n                              ))}\r\n                          </Typography>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </tbody>\r\n                  </Table>\r\n                  <CardContent>\r\n                    <Container>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\" component={\"strong\"}>\r\n                          Other Specification\r\n                        </Typography>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                          <Typography>\r\n                            <strong>Requirements</strong>\r\n                          </Typography>\r\n                            <div\r\n                              itemProp=\"requirements\"\r\n                              dangerouslySetInnerHTML={renderRequirement()}\r\n                            />\r\n                      </CardContent>\r\n                    </Container>\r\n                  </CardContent>\r\n                </CardContent>\r\n              </Container>\r\n            </CardContent>\r\n            <Divider />\r\n\r\n            <CardContent>\r\n              <Container>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" component=\"p\">\r\n                    {\" \"}\r\n                    Job Description\r\n                  </Typography>\r\n                  <Container itemProp=\"description\">\r\n                    <div dangerouslySetInnerHTML={renderDescription()} />\r\n                    <p>\r\n                      <Typography component=\"strong\">\r\n                        Applying Procedure:\r\n                      </Typography>\r\n                    </p>\r\n                    <Typography variant=\"subtitle1\" component=\"strong\">\r\n                      {job.apply_note}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      <strong>OR,</strong>\r\n                    </Typography>\r\n                  </Container>\r\n                </CardContent>\r\n              </Container>\r\n              <Divider />\r\n              <Container>\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  onClick={() => handleClickOpen()}\r\n                >\r\n                  APPLY NOW\r\n                </Button> */}\r\n                <RenderButton />\r\n                <FormDialog />\r\n              </Container>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Box>\r\n      <Snack\r\n        open={open}\r\n        handleClose={handleClose}\r\n        sever={sever}\r\n        message={snackMessage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport validator from \"validator\";\r\nimport axios from \"axios\";\r\nimport Snack from \"../common/snack\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linker: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [Contact, setContact] = useState(\"\");\r\n  const [password_r, setPasswordR] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [snackMessage, setSnackMessage] = useState(\"\");\r\n  const [sever, setSever] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (validator.isEmpty(Contact)) {\r\n      setOpen(true);\r\n      setSnackMessage(\"Contact Cannot be empty\");\r\n      setSever(\"warning\");\r\n      return;\r\n    }\r\n    if (!validator.isInt(Contact)) {\r\n      setOpen(true);\r\n      setSnackMessage(\"Contact should be Integer!\");\r\n      setSever(\"warning\");\r\n    }\r\n    if (Contact.trim().length !== 10) {\r\n      setOpen(true);\r\n      setSnackMessage(\"Contact should be an Nepali Number of 10 Digits!\");\r\n      setSever(\"warning\");\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      Name: fname + \" \" + lname,\r\n      Email: email,\r\n      type: \"A\",\r\n      password: password,\r\n      password_r: password_r,\r\n      Contact: parseInt(Contact.trim()),\r\n    };\r\n\r\n    axios\r\n      .post(\"api/user/register\", newUser)\r\n      .then((res) => {\r\n        setOpen(true);\r\n        setSnackMessage(\"Successfully Registered\");\r\n        setSever(\"success\");\r\n        setTimeout(() => {\r\n          window.location.href = \"/#login\";\r\n        }, 3000);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data) {\r\n          setOpen(true);\r\n          setSnackMessage(err.response.data);\r\n          setSever(\"error\");\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Sign Up - Rupandehi Job</title>\r\n        <meta name=\"description\" content=\"Sign Up for rupandehi job\" />\r\n      </Helmet>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form onSubmit={onSubmit} className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={fname}\r\n                  onChange={(e) => setFname(e.target.value)}\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={lname}\r\n                  onChange={(e) => setLname(e.target.value)}\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={Contact}\r\n                  onChange={(e) => setContact(e.target.value)}\r\n                  type=\"text\"\r\n                  id=\"contact\"\r\n                  label=\"Contact No.\"\r\n                  name=\"email\"\r\n                  autoComplete=\"contact\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={password_r}\r\n                  onChange={(e) => setPasswordR(e.target.value)}\r\n                  name=\"password_r\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  id=\"password+r\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" className={classes.linker}>\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          <Snack\r\n            handleClose={handleClose}\r\n            open={open}\r\n            message={snackMessage}\r\n            sever={sever}\r\n          />\r\n        </div>\r\n        <Box mt={5}></Box>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","// create an animated 404 react component\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { ErrorOutlineSharp } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(2),\r\n    backgroundColor: theme.palette.background.paper,\r\n    justifyContent: \"center\",\r\n    minHeight: \"70vh\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  error: {\r\n    color: theme.palette.text.error,\r\n  },\r\n  card: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function A404() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" className={classes.root}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Typography\r\n            className={classes.error}\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            align=\"center\"\r\n          >\r\n            <ErrorOutlineSharp color=\"secondary\" className={classes.icon} />\r\n            404 Page Not Found\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"primary\"\r\n            align=\"center\"\r\n            className={classes.card}\r\n          >\r\n            <Link to=\"/\">Return Home</Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Fuse from \"fuse.js\";\nimport {\n  InputBase,\n  IconButton,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n// import { fade } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { Pagination } from \"@material-ui/lab/\";\n\n// import { jobs } from \"../JobCard/jobs\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"70vh\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    padding: \"0px 20px\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 450,\n    // maxHeight: 180,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  text: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  jobPaper: {\n    margin: \"10px 10px 10px 10px\",\n  },\n  linker: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n  search: {\n    backgroundColor: theme.palette.common.white,\n    \"&:hover\": {\n      backgroundColor: theme.palette.common.white,\n    },\n    marginTop: \"10px\",\n    padding: \"2px 4px\",\n    alignItems: \"center\",\n    width: \"14.6em\",\n    maxHeight: \"2.5em\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  salary: {\n    color: \"#4ee44e\",\n  },\n}));\n\nexport default function Jobs() {\n  const classes = useStyles();\n  const [jobs, setJobs] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [errorMessage, setErrorMessage] = React.useState(null);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchResult, setSearchResult] = React.useState([]);\n\n  const [page, setPage] = React.useState(1);\n  const [pageSize, setPageSize] = React.useState(6);\n\n  const fixDate = (list) => {\n    let returnValue = [];\n    var oldDate1;\n    var oldDate2;\n    for (var i = 0; i < list.length; i++) {\n      oldDate1 = new Date(list[i].deadline);\n      oldDate1 = moment(oldDate1).format(\"HH:mm , D-MM-YYYY\");\n      list[i].deadline = oldDate1;\n      oldDate2 = new Date(list[i].postedOn);\n      oldDate2 = moment(oldDate2).format(\"HH:mm , DD-MM-YYYY\");\n      list[i].postedOn = oldDate2;\n      returnValue.push(list[i]);\n    }\n    return returnValue;\n  };\n\n  React.useEffect(() => {\n    // fetch jobs from /api/list/ using axios post with search as deadline\n    // if (localStorage.getItem(\"type\") !== \"A\") window.location.href = \"/404\";\n\n    axios\n      .post(\"/api/list/\", { cond: { deadline: { $gte: new Date() } } })\n      .then((res) => {\n        var fixed = fixDate(res.data);\n        console.log(fixed);\n        setJobs(fixed);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(true);\n        setErrorMessage(err.response);\n      });\n  }, []);\n  const fuse = new Fuse(jobs, {\n    keys: [\"title\", \"level\", \"type\", \"location\", \"category\"],\n    includeScore: true,\n    threshold: 0.3,\n  });\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n  function paginateGood(array, page_size, page_number) {\n    // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\n    return array.slice((page_number - 1) * page_size, page_number * page_size);\n  }\n\n  const handlePageSizeChange = (event) => {\n    setPageSize(event.target.value);\n    setPage(1);\n  };\n\n  const onChangeSearch = (e) => {\n    setSearch(e.target.value);\n    setSearchResult(fuse.search(e.target.value));\n    setPage(1);\n  };\n\n  const sJob =\n    searchResult.length > 0 ? searchResult.map((job) => job.item) : jobs;\n  const sortedJobs = sJob.sort((a, b) => {\n    if (a.postedOn < b.postedOn) {\n      return 1;\n    } else if (a.postedOn > b.postedOn) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignContent=\"center\" spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" className={classes.text}>\n            Recent Job Openings.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper component=\"form\" className={classes.search}>\n            <InputBase\n              className={classes.input}\n              value={search}\n              onChange={(e) => onChangeSearch(e)}\n              placeholder=\"Search for Jobs\"\n              inputProps={{ \"aria-label\": \"search google maps\" }}\n            />\n            <IconButton\n              type=\"submit\"\n              className={classes.iconButton}\n              aria-label=\"search\"\n            >\n              <Search />\n            </IconButton>\n          </Paper>\n        </Grid>\n        {loading ? (\n          <Grid item xs={12}>\n            <Box p={4}>\n              <Typography variant=\"h4\" color=\"textSecondary\">\n                Loading...\n                <CircularProgress />\n              </Typography>\n            </Box>\n          </Grid>\n        ) : error ? (\n          <Grid item xs={12}>\n            <Box p={4}>\n              <Typography variant=\"h4\" color=\"textSecondary\">\n                Error\n              </Typography>\n              <Typography variant=\"h5\" color=\"textSecondary\">\n                {errorMessage}\n              </Typography>\n            </Box>\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            <Grid container>\n              {paginateGood(sortedJobs, pageSize, page).map((job) => {\n                // const name = job.title.replace(/ /g, \"-\").toLowerCase();\n                // const jobid = job._id.slice(-4);\n                return (\n                  <Grid item key={job.name} className={classes.jobPaper}>\n                    <Paper className={classes.paper}>\n                      <Grid container spacing={2}>\n                        <Grid item>\n                          <ButtonBase className={classes.image}>\n                            <img\n                              className={classes.img}\n                              alt=\"complex\"\n                              src={\"/assets/images/rupandehi.jpg\"}\n                            />\n                          </ButtonBase>\n                        </Grid>\n                        <Grid item xs={12} sm container>\n                          <Grid\n                            item\n                            xs\n                            container\n                            direction=\"column\"\n                            spacing={2}\n                          >\n                            <Grid item xs>\n                              <Typography\n                                color=\"primary\"\n                                gutterBottom\n                                variant=\"subtitle1\"\n                              >\n                                {job.title}\n                              </Typography>\n                              <Typography variant=\"body2\" gutterBottom>\n                                {job.type}\n                              </Typography>\n                              <Typography variant=\"body2\" color=\"textSecondary\">\n                                Level: {job.level}\n                              </Typography>\n                            </Grid>\n                            <Grid item>\n                              <Link\n                                className={classes.linker}\n                                to={\n                                  // `/jobs/${name}-${jobid}`\n                                  `/jobs/${job._id}`\n                                }\n                              >\n                                <Button\n                                  size=\"small\"\n                                  color=\"secondary\"\n                                  variant=\"outlined\"\n                                >\n                                  View Job\n                                </Button>\n                              </Link>\n                            </Grid>\n                          </Grid>\n                          <Grid item>\n                            <Typography\n                              variant=\"body2\"\n                              style={{ marginLeft: \"5px\" }}\n                              color=\"textSecondary\"\n                            >\n                              Salary:\n                            </Typography>\n                            <Typography\n                              variant=\"subtitle1\"\n                              className={classes.salary}\n                            >\n                              {job.salary}\n                            </Typography>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Paper>\n                  </Grid>\n                );\n              })}\n            </Grid>\n            <Pagination\n              className=\"my-3\"\n              count={Math.ceil(sortedJobs.length / pageSize)}\n              page={page}\n              siblingCount={1}\n              boundaryCount={1}\n              color=\"secondary\"\n              onChange={handlePageChange}\n            />\n            {/* Items per page */}\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-label\">\n                Items per page\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={pageSize}\n                autoFocus\n                onChange={handlePageSizeChange}\n              >\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={6}>6</MenuItem>\n                <MenuItem value={9}>9</MenuItem>\n                <MenuItem value={12}>12</MenuItem>\n                <MenuItem value={15}>15</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Check from \"@material-ui/icons/Check\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Settings from \"@material-ui/icons/Settings\";\nimport Contact from \"@material-ui/icons/ContactMail\";\nimport Box from \"@material-ui/core/Box\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  TextField,\n  Grid,\n  Container,\n  CssBaseline,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Divider,\n} from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { FormControl } from \"@material-ui/core\";\nimport { School, TouchApp, DynamicFeed } from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: \"#eaeaf0\",\n    display: \"flex\",\n    height: 22,\n    alignItems: \"center\",\n  },\n  active: {\n    color: \"#784af4\",\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: \"50%\",\n    backgroundColor: \"currentColor\",\n  },\n  completed: {\n    color: \"#784af4\",\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? (\n        <Check className={classes.completed} />\n      ) : (\n        <div className={classes.circle} />\n      )}\n    </div>\n  );\n}\n\nQontoStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n};\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  active: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n  },\n  completed: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n  },\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <Contact />,\n    2: <School />,\n    3: <TouchApp />,\n    4: <Settings />,\n    5: <DynamicFeed />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"20px\",\n    minHeight: \"70vh\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    // marginTop: theme.spacing(3),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  submit: {\n    margin: theme.spacing(3, 1, 2),\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  chipp: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  linker: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"Basic Info\",\n    \"Education\",\n    \"Trainings\",\n    \"Skills and Experience\",\n    \"Miscellaneous\",\n  ];\n}\n\nexport default function GetInfo() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [religion, setReligion] = useState(\"\");\n  const [nationality, setNationality] = useState(\"Nepali\");\n  const [gender, setGender] = useState(\"\");\n  const [skill, setSkill] = useState([]);\n  const [special, setSpecial] = useState([]);\n  const [yoe, setYoe] = useState(\"\");\n\n  const [marital_status, setMaritalStatus] = useState(\"Single\");\n  const [inputList, setInputList] = useState([\n    { insti: \"\", starty: \"\", endy: \"\", cgpa: \"\", course: \"\", level: \"\" },\n  ]);\n  const [inputList2, setInputList2] = useState([\n    { insti: \"\", duration: \"\", complete_date: \"\", course: \"\", remark: \"\" },\n  ]);\n\n  const [chipData, setChipData] = React.useState([]);\n  const [chipData1, setChipData1] = React.useState([]);\n\n  useEffect(() => {\n    // use axios to fetch data from the /api/user/auth route\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n\n    axios\n      .get(\"/api/user/auth\", config)\n      .then((res) => {\n        setName(res.data.Name);\n        setEmail(res.data.Email);\n        setContact(res.data.Contact);\n        setAddress(res.data.Address);\n        setDob(moment(res.data.dob).format(\"YYYY-MM-DD\"));\n        setBio(res.data.Bio);\n        setReligion(res.data.religion);\n        setYoe(res.data.yoe);\n        setNationality(res.data.nationality);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const handleChipData = (e) => {\n    e.preventDefault();\n    const newChip = [...chipData, skill];\n    console.log(newChip);\n    setChipData(newChip);\n    setSkill(\"\");\n  };\n  const handleChipData1 = () => {\n    const newChip = [...chipData1, special];\n    console.log(newChip);\n    setChipData1(newChip);\n    setSpecial(\"\");\n  };\n\n  const handleSkillSubmit = () => {\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    for (let index = 0; index < chipData.length; index++) {\n      var req = {\n        uid: localStorage.getItem(\"id\"),\n        Name: chipData[index],\n      };\n      axios\n        .post(\"/api/user/skills/add/\", req, config)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((err) => {\n          if (err.response.data) alert(err.response.data);\n        });\n    }\n  };\n  const handleSpecialSubmit = () => {\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    for (let index = 0; index < chipData1.length; index++) {\n      var req = {\n        uid: localStorage.getItem(\"id\"),\n        Name: chipData1[index],\n      };\n      axios\n        .post(\"/api/user/special/add/\", req, config)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((err) => {\n          if (err.response.data) alert(err.response.data);\n        });\n    }\n  };\n\n  const onAddInfo = async (e) => {\n    e.preventDefault();\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const data = {\n      Name: name,\n      Email: email,\n      Contact: contact,\n      Address: address,\n      dob: dob,\n      yoe: yoe,\n      Bio: bio,\n      gender: gender,\n      marital_status: marital_status,\n      nationality,\n      religion,\n    };\n    await axios\n      .post(\"/api/user/profile\", data, config)\n      .then((res) => {\n        console.log(res);\n        if (res.status === 200) {\n          setName(\"\");\n          setEmail(\"\");\n          setContact(\"\");\n          setAddress(\"\");\n          setDob(\"\");\n          setBio(\"\");\n          setGender(\"\");\n          setYoe(\"\");\n          setMaritalStatus(\"\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleDelete = (chipToDelete) => () => {\n    setChipData((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n  const handleDelete1 = (chipToDelete) => () => {\n    setChipData1((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n  const handleInputChange1 = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList2];\n    list[index][name] = value;\n    setInputList2(list);\n  };\n  const onAddEdu = async (e, i) => {\n    e.preventDefault();\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n        \"content-type\": \"application/json\",\n        \"Access-Control-Allow-Headers\": \"Origin\",\n      },\n    };\n    const req = {\n      edu: {\n        institute: inputList[i].insti,\n        level: inputList[i].level,\n        course: inputList[i].course,\n        start_year: inputList[i].starty,\n        end_year: inputList[i].endy,\n        cgpa: inputList[i].cgpa,\n        uid: localStorage.getItem(\"id\"),\n      },\n    };\n    console.log(req);\n\n    await postRequest();\n    // post req to route /api/user/edu/update with config using axios\n    async function postRequest() {\n      axios\n        .post(\"/api/user/edu/update\", req, config)\n        .then((response) => {\n          if (response.status === 200) {\n            console.log(\"Success\");\n          } else {\n            console.log(\"Error\");\n          }\n        })\n        .catch((err) => {\n          if (err.response.data) alert(err.response.data);\n        });\n    }\n  };\n  const onAddTraining = async (e, i) => {\n    e.preventDefault();\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n        \"content-type\": \"application/json\",\n        \"Access-Control-Allow-Headers\": \"Origin\",\n      },\n    };\n    const req = {\n      traning: {\n        institute: inputList2[i].insti,\n        duration: inputList2[i].duration,\n        course: inputList2[i].course,\n        completion_date: inputList2[i].complete_date,\n        remark: inputList2[i].remark,\n        uid: localStorage.getItem(\"id\"),\n      },\n    };\n    console.log(req);\n    await postRequest();\n    // post req to route /api/user/edu/update with config using axios\n    async function postRequest() {\n      axios\n        .post(\"/api/user/traning/update\", req, config)\n        .then((response) => {\n          if (response.status === 200) {\n            console.log(\"Success\");\n            setInputList2([\n              {\n                insti: \"\",\n                duration: \"\",\n                complete_date: \"\",\n                course: \"\",\n                remark: \"\",\n              },\n            ]);\n          } else {\n            console.log(\"Error\");\n          }\n        })\n        .catch((err) => {\n          if (err.response.data) alert(err.response.data);\n        });\n    }\n  };\n\n  // handle input change\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = (index) => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  const handleRemoveClick1 = (index) => {\n    const list = [...inputList2];\n    list.splice(index, 1);\n    setInputList2(list);\n  };\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([\n      ...inputList,\n      { insti: \"\", starty: \"\", endy: \"\", cgpa: \"\", course: \"\", level: \"\" },\n    ]);\n  };\n  const handleAddClick1 = () => {\n    setInputList2([\n      ...inputList2,\n      { insti: \"\", duration: \"\", complete_date: \"\", course: \"\", remark: \"\" },\n    ]);\n  };\n\n  const steps = getSteps();\n\n  const BasicInfo = () => {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <form key={\"form-1\"} onSubmit={onAddInfo} className={classes.form}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"name\"\n                    name=\"name\"\n                    variant=\"outlined\"\n                    value={name}\n                    required\n                    onChange={(e) => setName(e.target.value)}\n                    fullWidth\n                    id=\"standard-textarea\"\n                    label=\"Full Name\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    type=\"email\"\n                    value={email}\n                    onChange={(event) => setEmail(event.target.value)}\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={contact}\n                    onChange={(event) => setContact(event.target.value)}\n                    id=\"contact\"\n                    label=\"Contact No.\"\n                    name=\"contact\"\n                    autoComplete=\"Phone\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={address}\n                    onChange={(event) => setAddress(event.target.value)}\n                    id=\"address\"\n                    label=\"Address\"\n                    name=\"address\"\n                    autoComplete=\"address\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel id=\"marital_status\">Marital Status</InputLabel>\n                  <Select\n                    fullWidth\n                    value={marital_status}\n                    onChange={(event) => setMaritalStatus(event.target.value)}\n                    id=\"marital-status\"\n                    label=\"Marital Status\"\n                    name=\"marital_status\"\n                  >\n                    <MenuItem value=\"Single\">Single</MenuItem>\n                    <MenuItem value=\"Married\">Married</MenuItem>\n                    <MenuItem value=\"Divorced\">Divorced</MenuItem>\n                    <MenuItem value=\"Widowed\">Widowed</MenuItem>\n                  </Select>\n                </Grid>\n                <Grid item xs={12}>\n                  <InputLabel id=\"gender-label\">Gender</InputLabel>\n                  <Select\n                    fullWidth\n                    value={gender}\n                    onChange={(event) => setGender(event.target.value)}\n                    id=\"gender\"\n                    label=\"Gender\"\n                    name=\"gender\"\n                  >\n                    <MenuItem value=\"Male\">Male</MenuItem>\n                    <MenuItem value=\"Female\">Female</MenuItem>\n                    <MenuItem value=\"Other\">Other</MenuItem>\n                  </Select>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"religion\"\n                    name=\"religion\"\n                    variant=\"outlined\"\n                    value={religion}\n                    required\n                    onChange={(e) => setReligion(e.target.value)}\n                    fullWidth\n                    id=\"Religion\"\n                    label=\"Religion\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={nationality}\n                    onChange={(event) => setNationality(event.target.value)}\n                    id=\"nationality\"\n                    label=\"Nationality\"\n                    name=\"nationality\"\n                    autoComplete=\"nationatility\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    multiline\n                    rows={4}\n                    required\n                    fullWidth\n                    type=\"text\"\n                    value={bio}\n                    onChange={(event) => setBio(event.target.value)}\n                    id=\"bio\"\n                    label=\"Bio\"\n                    name=\"bio\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    focused\n                    type=\"date\"\n                    value={dob}\n                    onChange={(event) => setDob(event.target.value)}\n                    fullWidth\n                    id=\"dob\"\n                    label=\"Date of Birth\"\n                    name=\"dob\"\n                    autoComplete=\"DOB\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    focused\n                    type=\"number\"\n                    value={yoe}\n                    onChange={(event) => setYoe(event.target.value)}\n                    fullWidth\n                    id=\"yoe\"\n                    label=\"Years os work Experience\"\n                    name=\"yoe\"\n                    autoComplete=\"yoe\"\n                  />\n                </Grid>\n                <Grid>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n      </div>\n    );\n  };\n\n  function Education() {\n    return (\n      <div>\n        <Container maxWidth=\"xs\">\n          <CssBaseline />\n\n          <div className={classes.paper}>\n            {inputList.map((x, i) => {\n              return (\n                <form className={classes.form} onSubmit={(e) => onAddEdu(e, i)}>\n                  <Grid key={i} container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"\"\n                        name=\"insti\"\n                        variant=\"outlined\"\n                        value={x.insti}\n                        onChange={(e) => handleInputChange(e, i)}\n                        required\n                        fullWidth\n                        id=\"institute\"\n                        label=\"Institute Name\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"\"\n                        name=\"course\"\n                        variant=\"outlined\"\n                        value={x.course}\n                        onChange={(e) => handleInputChange(e, i)}\n                        required\n                        fullWidth\n                        id=\"course\"\n                        label=\"Course\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">\n                          Level\n                        </InputLabel>\n                        <Select\n                          fullWidth\n                          name=\"level\"\n                          labelId=\"level\"\n                          id=\"level\"\n                          value={x.level}\n                          onChange={(e) => handleInputChange(e, i)}\n                        >\n                          <MenuItem value={\"Masters\"}>Masters</MenuItem>\n                          <MenuItem value={\"Bachelor\"}>Bachelor</MenuItem>\n                          <MenuItem value={\"+2\"}>+2</MenuItem>\n                          <MenuItem value={\"S.E.E\"}>S.E.E</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        value={x.starty}\n                        onChange={(event) => handleInputChange(event, i)}\n                        fullWidth\n                        id=\"syear\"\n                        label=\"Start Year\"\n                        name=\"starty\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={x.endy}\n                        onChange={(event) => handleInputChange(event, i)}\n                        id=\"eyear\"\n                        label=\"End Year\"\n                        name=\"endy\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={x.cgpa}\n                        onChange={(event) => handleInputChange(event, i)}\n                        id=\"cgpa\"\n                        label=\"CGPA\"\n                        name=\"cgpa\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Button\n                        type=\"submit\"\n                        variant=\"text\"\n                        size=\"large\"\n                        color=\"secondary\"\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Grid container spacing={2}>\n                        {inputList.length !== 1 && (\n                          <Grid item>\n                            <Button\n                              variant=\"contained\"\n                              color=\"secondary\"\n                              onClick={() => handleRemoveClick(i)}\n                            >\n                              Remove\n                            </Button>\n                          </Grid>\n                        )}\n                        {inputList.length - 1 === i && (\n                          <Grid item>\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={handleAddClick}\n                            >\n                              Add\n                            </Button>\n                          </Grid>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </form>\n              );\n            })}\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n\n  function Trainings() {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            {inputList2.map((x, i) => {\n              return (\n                <form\n                  onSubmit={(e) => onAddTraining(e, i)}\n                  className={classes.form}\n                >\n                  <Grid key={i} container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"\"\n                        name=\"insti\"\n                        variant=\"outlined\"\n                        value={x.insti}\n                        onChange={(e) => handleInputChange1(e, i)}\n                        required\n                        fullWidth\n                        id=\"train-Institute\"\n                        label=\"Institute Name\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        value={x.course}\n                        onChange={(e) => handleInputChange1(e, i)}\n                        fullWidth\n                        id=\"course-name\"\n                        label=\"Course Name\"\n                        name=\"course\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={x.duration}\n                        onChange={(e) => handleInputChange1(e, i)}\n                        id=\"course-duration\"\n                        label=\"Course Duration\"\n                        name=\"duration\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={x.complete_date}\n                        onChange={(e) => handleInputChange1(e, i)}\n                        id=\"endyear\"\n                        label=\"Course Completion Date\"\n                        name=\"complete_date\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        // required\n                        fullWidth\n                        value={x.remark}\n                        onChange={(e) => handleInputChange1(e, i)}\n                        id=\"remarks\"\n                        label=\"Remarks\"\n                        name=\"remark\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Button\n                        type=\"submit\"\n                        variant=\"text\"\n                        size=\"large\"\n                        color=\"secondary\"\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Grid container spacing={2}>\n                        {inputList2.length !== 1 && (\n                          <Grid item>\n                            <Button\n                              variant=\"contained\"\n                              color=\"secondary\"\n                              onClick={() => handleRemoveClick1(i)}\n                            >\n                              Remove\n                            </Button>\n                          </Grid>\n                        )}\n                        {inputList2.length - 1 === i && (\n                          <Grid item>\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={handleAddClick1}\n                            >\n                              Add\n                            </Button>\n                          </Grid>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </form>\n              );\n            })}\n          </div>\n        </Container>\n      </div>\n    );\n  }\n\n  function SKillsExperience() {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Typography variant=\"h5\">Skills</Typography>\n          <div className={classes.paper}>\n            <Grid container spacing={2}>\n              <form onSubmit={(e) => handleChipData(e)}>\n                <Grid item xs={12} sm={8}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={skill}\n                    onChange={(e) => setSkill(e.target.value)}\n                    id=\"skills\"\n                    label=\"Add Skills\"\n                    name=\"skills\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"text\"\n                    size=\"large\"\n                    color=\"secondary\"\n                  >\n                    Add\n                  </Button>\n                </Grid>\n              </form>\n              <Grid item xs={12}>\n                <Paper component=\"ul\" className={classes.chipp}>\n                  {chipData.map((data) => (\n                    <li key={Math.random() * 56842555 + data}>\n                      <Chip\n                        label={data}\n                        onDelete={handleDelete(data)}\n                        className={classes.chip}\n                      />\n                    </li>\n                  ))}\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleSkillSubmit()}\n                >\n                  Save\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n          <Divider />\n          <Typography variant=\"h5\">Specializations</Typography>\n          <div className={classes.paper}>\n            <Grid container spacing={2}>\n              <form onSubmit={handleChipData1}>\n                <Grid item xs={12} sm={8}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={special}\n                    onChange={(e) => setSpecial(e.target.value)}\n                    id=\"specialization\"\n                    label=\"Add Specilization\"\n                    name=\"skills\"\n                    onSubmit={() => handleChipData1()}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    variant=\"text\"\n                    size=\"large\"\n                    color=\"secondary\"\n                    onClick={() => handleChipData1()}\n                  >\n                    Add\n                  </Button>\n                </Grid>\n              </form>\n              <Grid item xs={12}>\n                <Paper component=\"ul\" className={classes.chipp}>\n                  {chipData1.map((data) => (\n                    <li key={Math.random() * 56842555 + data}>\n                      <Chip\n                        label={data}\n                        onDelete={handleDelete1(data)}\n                        className={classes.chip}\n                      />\n                    </li>\n                  ))}\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Button onClick={() => handleSpecialSubmit()}>Save</Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return BasicInfo();\n      case 1:\n        return Education();\n      case 2:\n        return Trainings();\n      case 3:\n        return SKillsExperience();\n      case 4:\n        return \"Extra Info\";\n      default:\n        return \"Unknown step\";\n    }\n  }\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>\n              {getStepContent(activeStep)}\n            </Typography>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  TextField,\n  Grid,\n  Container,\n  CssBaseline,\n  Button,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {\n  School,\n  RecentActors,\n  TouchApp,\n  DynamicFeed,\n} from \"@material-ui/icons\";\nimport Settings from \"@material-ui/icons/Settings\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box key={value} p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n    key: { index },\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: \"20px\",\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    minHeight: \"75vh\",\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 1, 2),\n  },\n  linker: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function EditProfile() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [address, setAddredd] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [edu, setEdu] = useState([]);\n  const [insti, setInsti] = useState(\"\");\n  const [starty, setStarty] = useState(\"\");\n  const [endy, setEndy] = useState(\"\");\n  const [cgpa, setCgpa] = useState(\"\");\n  const [dp, setDp] = useState(\"\");\n  // const [course, setCourse] = useState(\"\");\n  // const [trainings, setTraning] = useState([]);\n  const [tinist, setTinist] = useState(\"\");\n  const [tcourse, setTcourse] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [remark, setRemark] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [skill, setSkill] = useState(\"\");\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const BasicInfo = () => {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <form key={\"form-1\"} className={classes.form}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    value={name}\n                    required\n                    onChange={(e) => setName(e.target.value)}\n                    fullWidth\n                    id=\"standard-textarea\"\n                    label=\"First Name\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    type=\"email\"\n                    value={email}\n                    onChange={(event) => setEmail(event.target.value)}\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={contact}\n                    onChange={(event) => setContact(event.target.value)}\n                    id=\"contact\"\n                    label=\"Contact No.\"\n                    name=\"contact\"\n                    autoComplete=\"Phone\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={address}\n                    onChange={(event) => setAddredd(event.target.value)}\n                    id=\"address\"\n                    label=\"Address\"\n                    name=\"address\"\n                    autoComplete=\"address\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    multiline\n                    rows={4}\n                    required\n                    fullWidth\n                    type=\"email\"\n                    value={bio}\n                    onChange={(event) => setBio(event.target.value)}\n                    id=\"bio\"\n                    label=\"Bio\"\n                    name=\"bio\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    focused\n                    type=\"date\"\n                    value={dob}\n                    onChange={(event) => setDob(event.target.value)}\n                    fullWidth\n                    id=\"dob\"\n                    label=\"Date of Birth\"\n                    name=\"dob\"\n                    autoComplete=\"DOB\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Save\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.submit}\n              >\n                Cancel\n              </Button>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  };\n  function Education() {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <form className={classes.form}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"\"\n                    name=\"Institute\"\n                    variant=\"outlined\"\n                    value={insti}\n                    onChange={(event) => setInsti(event.target.value)}\n                    required\n                    fullWidth\n                    id=\"institute\"\n                    label=\"Institute Name\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    value={starty}\n                    onChange={(event) => setStarty(event.target.value)}\n                    fullWidth\n                    id=\"syear\"\n                    label=\"Start Year\"\n                    name=\"syear\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={endy}\n                    onChange={(event) => setEndy(event.target.value)}\n                    id=\"eyear\"\n                    label=\"End Year\"\n                    name=\"eyear\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={cgpa}\n                    onChange={(event) => setCgpa(event.target.value)}\n                    id=\"cgpa\"\n                    label=\"CGPA\"\n                    name=\"cgpa\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Save\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.submit}\n              >\n                Cancel\n              </Button>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n  function Trainings() {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <form className={classes.form}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"\"\n                    name=\"Institute\"\n                    variant=\"outlined\"\n                    value={tinist}\n                    onChange={(e) => setTinist(e.target.value)}\n                    required\n                    fullWidth\n                    id=\"institute\"\n                    label=\"Institute Name\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    value={tcourse}\n                    onChange={(e) => setTcourse(e.target.value)}\n                    fullWidth\n                    id=\"course-name\"\n                    label=\"Course Name\"\n                    name=\"course-name\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={duration}\n                    onChange={(e) => setDuration(e.target.value)}\n                    id=\"course-duration\"\n                    label=\"Course Duration\"\n                    name=\"eyear\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    // required\n                    fullWidth\n                    value={remark}\n                    onChange={(e) => setRemark(e.target.value)}\n                    id=\"remarks\"\n                    label=\"Remarks\"\n                    name=\"remarks\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Save\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.submit}\n              >\n                Cancel\n              </Button>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n  function SKillsExperience() {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <form className={classes.form}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"\"\n                    name=\"skill\"\n                    variant=\"outlined\"\n                    value={skill}\n                    onChange={(e) => setSkill(e.target.value)}\n                    required\n                    fullWidth\n                    id=\"skill\"\n                    label=\"Your Skill\"\n                  />\n                </Grid>\n                {/* <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"course-name\"\n                    label=\"Course Name\"\n                    name=\"course-name\"\n                  />\n                </Grid> */}\n                {/*  <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={\"3 months\"}\n                    id=\"course-duration\"\n                    label=\"Course Duration\"\n                    name=\"eyear\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    // required\n                    fullWidth\n                    value={\"Remarks\"}\n                    id=\"remarks\"\n                    label=\"Remarks\"\n                    name=\"remarks\"\n                  />\n                </Grid> */}\n              </Grid>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Save\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.submit}\n              >\n                Cancel\n              </Button>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n  function OtherInfo() {\n    return <div></div>;\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"type\") !== \"A\") window.location.href = \"/#404\";\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    axios.get(\"/api/user/edu\", config).then((res) => {\n      setEdu(res.data);\n    });\n    axios.get(\"/api/user/skills\", config).then((res) => {\n      setSkills(res.data);\n    });\n    axios.get(\"/api/user/auth\", config).then(async (res) => {\n      setUser(res.data);\n      if (user.dp) {\n        try {\n          const result = await axios.get(\n            \"/api/dp/download/\" + localStorage.getItem(\"id\"),\n            {\n              responseType: \"blob\",\n            }\n          );\n          setDp(URL.createObjectURL(result.data));\n        } catch (error) {\n          if (error.response && error.response.status === 400) {\n            alert(\"Error while downloading DP file. Try again later\");\n          }\n        }\n      }\n    });\n  });\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Edit Info\"\n        className={classes.tabs}\n      >\n        <Tab\n          dp={dp}\n          icon={<RecentActors />}\n          label={`Basic Info`}\n          {...a11yProps(0)}\n        />\n        <Tab icon={<School />} edu={edu} label=\"Education\" {...a11yProps(1)} />\n        <Tab icon={<TouchApp />} label=\"Trainings\" {...a11yProps(2)} />\n        <Tab\n          icon={<Settings />}\n          skills={skills}\n          label=\"Skills and Experience\"\n          {...a11yProps(3)}\n        />\n        {/* <Tab icon={<Public />} label=\"Social Accounts\" {...a11yProps(4)} /> */}\n        <Tab icon={<DynamicFeed />} label=\"Other Info\" {...a11yProps(4)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Typography component=\"h2\" variant=\"strong\">\n          Basic Information\n        </Typography>\n        {BasicInfo()}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Typography component=\"h2\" variant=\"strong\">\n          Education\n        </Typography>\n        {Education()}\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Typography component=\"h2\" variant=\"strong\">\n          Trainings\n        </Typography>\n        {Trainings()}\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <Typography component=\"h2\" variant=\"strong\">\n          Skills and Experience\n        </Typography>\n        {SKillsExperience()}\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        <Typography component=\"h2\" variant=\"strong\">\n          Other Information\n        </Typography>\n        {OtherInfo()}\n      </TabPanel>\n    </div>\n  );\n}\n","import { Box, makeStyles, Typography, Avatar } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport Snack from \"../common/snack\";\nimport Moment from \"react-moment\";\nimport \"./style.css\";\nimport axios from \"axios\";\nimport { GlobalStyle } from \"../Nav/styles\";\nconst useStyle = makeStyles({\n  root: {\n    marginTop: \"80px\",\n    minHeight: \"75vh\",\n  },\n  image: {\n    width: \"100px\",\n    height: \"100px\",\n  },\n});\nexport default function Profile() {\n  const classes = useStyle();\n  const [dp, setDp] = useState(\"\");\n  const [edu, setEdu] = useState([]);\n  // const [socials, setSocial] = useState([]);\n  const [traning, setTraning] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [skills, setSkills] = useState([]);\n  const [user, setUser] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [snackMessage, setSnackMessage] = useState(\"\");\n  const [sever, setSever] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem(\"type\") !== \"A\") window.location.href = \"/#404\";\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n\n    axios.get(\"/api/user/skills\", config).then((res) => {\n      setSkills(res.data);\n    });\n    axios\n      .get(\"/api/user/auth\", config)\n      .then(async (res) => {\n        setUser(res.data);\n        setLoading(false);\n        if (user.dp) {\n          try {\n            const result = await axios.get(\n              \"/api/dp/download/\" + localStorage.getItem(\"id\"),\n              {\n                responseType: \"blob\",\n              }\n            );\n            setDp(URL.createObjectURL(result.data));\n          } catch (error) {\n            if (error.response && error.response.status === 400) {\n              alert(\"Error while downloading DP file. Try again later\");\n            }\n          }\n        }\n      })\n      .catch((error) => {\n        if (error.response) {\n          setOpen(true);\n          setSnackMessage(error.response.data + \" You'll Be logged out soon\");\n          setSever(\"error\");\n          setTimeout(() => {\n            localStorage.clear();\n            window.location.href = \"/#login\";\n          }, 3000);\n        }\n      });\n\n    // get data from /api/user/edu and update the state\n    axios.get(\"/api/user/edu\", config).then(async (res) => {\n      setEdu(res.data);\n    });\n    axios.get(\"/api/user/traning\", config).then(async (res) => {\n      setTraning(res.data);\n    });\n  }, [user.dp, edu.length, loading]);\n  if (user.Bio === \"You can edit to add Bio!\") {\n    window.location.href = \"/#get-info\";\n  }\n\n  console.log(user);\n  console.log(edu);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <GlobalStyle />\n      <Typography variant={\"h3\"} component=\"strong\">\n        Profile\n      </Typography>\n      <div className=\"card-body\">\n        <div className=\"row pb-3\">\n          <div className=\"col-md-3 pt-md-0 pt-3\">\n            <Avatar src={dp} className={classes.image} alt={user.Name}></Avatar>\n          </div>\n          <div className=\"col-md-9 pt-md-0 pt-2\">\n            <h5 className=\"mt-0\">\n              {user.gender === \"Female\"\n                ? \"Mrs.\"\n                : user.gender === \"Male\"\n                ? \"Mr.\"\n                : \"\"}{\" \"}\n              {user.Name}\n            </h5>\n            <div className=\"personal-info\">\n              <span>Address: {user.Address}</span>\n              <br />\n              <span>Phone: {user.Contact}</span>\n              <br />\n              <span>\n                Email: <a href={`${user.Email}`}>{user.Email}</a>\n              </span>\n              <br />\n              <span>\n                Date of Birth:{\" \"}\n                <Moment format=\"MMM D, YYYY\" withTitle>\n                  {user.dob}\n                </Moment>{\" \"}\n              </span>\n              <br />\n            </div>\n          </div>\n        </div>\n        <div className=\"row user-detail\">\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-list mr-2\"></span> Objective\n            </h5>\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"container\">\n              <p className=\"word-wrap\"></p>\n              <p>{user.Bio}</p>\n              <p></p>\n            </div>\n          </div>\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-graduation mr-2\"></span> Education\n            </h5>\n            {edu.map((edu, i) => (\n              <div key={i}>\n                <div className=\"dropdown-divider\"></div>\n                <div className=\"row pb-3\">\n                  <div className=\"col-md-3\">\n                    <span className=\"icon-calendar mr-2\"></span>\n                    {edu.end_year}\n                  </div>\n                  <div className=\"col-md-9\">\n                    <h6>\n                      <span className=\"icon-circle-check mr-2\"></span>\n                      {`(${edu.level})`} -{edu.course}\n                    </h6>\n                    <div>\n                      <span className=\"icon-building mr-2\"></span>\n                      {edu.institute}\n                      <span>, CGPA: {edu.cgpa} </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          {traning.length !== 0 ? (\n            <div className=\"col-md-12 mt-3\">\n              <h5>\n                <span className=\"icon-training mr-2\"></span>{\" \"}\n                Training/Certificates\n              </h5>\n              {traning.map((training, i) => (\n                <div key={i}>\n                  <div className=\"dropdown-divider\"></div>\n                  <div className=\"row pb-3\">\n                    <div className=\"col-md-3\">\n                      <span className=\"icon-calendar mr-2\"></span>\n                      {`${training.completion_date}`} {`(${training.duration})`}\n                    </div>\n                    <div className=\"col-md-9\">\n                      <h6>\n                        <span className=\"icon-circle-check mr-2\"></span>\n                        {training.course}\n                      </h6>\n                      <div>\n                        <span className=\"icon-building mr-2\"></span>\n                        {training.institute}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : null}\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-id-card mr-2\"></span>\n              Job Preference\n            </h5>\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"row\">\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Looking for: Entry Level\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Job Categories: Creative / Graphics / Designing, IT &amp;\n                Telecommunication\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Available for: Full Time\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Expected Salary: (Above) NRs 15,000.00\n                <span className=\"badge badge-secondary\">Monthly</span>\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Total Experience: 1 year\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Job Preference Location:\n                <span className=\"badge badge-pill badge-secondary\">\n                  Kathmandu\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-language mr-2\"></span> Language\n            </h5>\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"icon col-md-12\"></div>\n            <div className=\"row pb-3\">\n              <div className=\"col-md-3\"></div>\n              <div className=\"col-md-9\">\n                <h6>English (Avg: 4.75)</h6>\n                <span className=\"icon-circle-check mr-1\"></span>Reading\n                <span className=\"mr-2 bade badge-success \">5</span>\n                <span className=\"icon-circle-check mr-1\"></span>Speaking\n                <span className=\"mr-2 badge badge-secondary \">4</span>\n                <span className=\"icon-circle-check mr-1\"></span>Writing\n                <span className=\"mr-2 badge badge-success \">5</span>\n                <span className=\"icon-circle-check mr-1\"></span>Listening\n                <span className=\"mr-2 badge badge-success \">5</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-idea mr-2\"></span> Specializations and\n              Skills\n            </h5>\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"row pb-3\">\n              <div className=\"offset-md-3 col-md-9\">\n                <h6>\n                  <span className=\"icon-circle-check mr-2\"></span>\n                  Specializations\n                </h6>\n                <span className=\"badge badge-secondary mr-1\">\n                  Full Stack Web Developer\n                </span>\n                <span className=\"badge badge-secondary mr-1\">\n                  Reactjs And React-Native\n                </span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"offset-md-3 col-md-9\">\n                <h6>\n                  <span className=\"icon-circle-check mr-2\"></span>Skills\n                </h6>\n                {skills.map((skill, i) => (\n                  <span key={skill.id} className=\"badge badge-secondary mr-1\">\n                    {skill.Name}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-id-card mr-2\"></span>\n              Personal Information\n            </h5>\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"row\">\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Gender: {user.gender}\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Current Address: {user.Address}\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Marital Status: {user.marital_status}\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Religion: {user.religion}\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Nationality: {user.nationality}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-share mr-2\"></span>\n              Social Account\n            </h5>\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"row\">\n              <div className=\"offset-md-3 col-md-9\">\n                <a href=\"https://facebook.com/l.b057\">\n                  https://facebook.com/l.b057\n                </a>\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <a href=\"https://twitter.com/laxmanbhusal22\">\n                  https://twitter.com/laxmanbhusal22\n                </a>\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <a href=\"https://github.com/bhusallaxman22\">\n                  https://github.com/bhusallaxman22\n                </a>\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <a href=\"https://bhusallaxman22.github.io/\">\n                  https://bhusallaxman22.github.io/\n                </a>\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <a href=\"https://instagram.com/lakshman.22\">\n                  https://instagram.com/lakshman.22\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 mt-3\">\n            <h5>\n              <span className=\"icon-id-card mr-2\"></span>\n              Other Information\n            </h5>\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"row\">\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Willing to travel outside of residing location during the job:\n                No\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Willing to temporarily relocate outside of residing location\n                during the job period: No\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Two Wheeler License: Yes\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Four Wheeler License: No\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Own Two Wheeler: No\n              </div>\n              <div className=\"offset-md-3 col-md-9\">\n                <span className=\"icon-circle-check mr-2\"></span>\n                Own Four Wheeler: No\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Snack\n        handleClose={handleClose}\n        open={open}\n        message={snackMessage}\n        sever={sever}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nfunction createData(id, title, postedOn, applicants, accepted, deadline) {\n  return { id, title, postedOn, applicants, accepted, deadline };\n}\n\n//\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"title\", numeric: false, disablePadding: true, label: \"Job Title\" },\n  {\n    id: \"applicants\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Applicants\",\n  },\n  { id: \"postedOn\", numeric: false, disablePadding: false, label: \"Posted On\" },\n  { id: \"accepted\", numeric: true, disablePadding: false, label: \"Accepted\" },\n  { id: \"deadline\", numeric: false, disablePadding: false, label: \"Deadline\" },\n  { id: \"actions\", numeric: false, disablePadding: false, label: \"Actions\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    // onSelectAllClick,\n    order,\n    orderBy,\n    // numSelected,\n    // rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all jobs\" }}\n          />\n        </TableCell> */}\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            // align={headCell.numeric ? 'left' : 'right'}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Jobs List\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    minHeight: \"70vh\",\n    marginTop: \"80px\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  actionBut: {\n    margin: \"10px 10px 10px 10px\",\n  },\n  applicants: {\n    color: \"#32CD32\",\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"deadline\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [jobs, setJobs] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  React.useEffect(() => {\n    if (localStorage.getItem(\"type\") !== \"R\") {\n      window.location.href = \"/#404\";\n    }\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    axios\n      .get(\"/api/list/rid\", config)\n      .then((response) => {\n        setJobs(response.data);\n        console.log(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [jobs.rid]);\n\n  let rows = [\n    jobs.map((job) =>\n      createData(\n        job._id,\n        job.title,\n        job.postedOn,\n        job.curr_app,\n        job.accepted,\n        job.deadline\n      )\n    ),\n  ];\n  console.log(\"rows\", rows);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  function AlertDialog({ row }) {\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Are You Sure You want to Delete this Job?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              This will delete the job and all the applications associated with\n              it. This action cannot be undone.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={() => onDeleteJob(row)} color=\"primary\" autoFocus>\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  // const handleSelectAllClick = (event) => {\n  //   if (event.target.checked) {\n  //     const newSelecteds = rows.map((n) => n.id);\n  //     setSelected(newSelecteds);\n  //     return;\n  //   }\n  //   setSelected([]);\n  // };\n\n  // const handleClick = (event, id) => {\n  //   const selectedIndex = selected.indexOf(id);\n  //   let newSelected = [];\n\n  //   if (selectedIndex === -1) {\n  //     newSelected = newSelected.concat(selected, id);\n  //   } else if (selectedIndex === 0) {\n  //     newSelected = newSelected.concat(selected.slice(1));\n  //   } else if (selectedIndex === selected.length - 1) {\n  //     newSelected = newSelected.concat(selected.slice(0, -1));\n  //   } else if (selectedIndex > 0) {\n  //     newSelected = newSelected.concat(\n  //       selected.slice(0, selectedIndex),\n  //       selected.slice(selectedIndex + 1)\n  //     );\n  //   }\n\n  //   setSelected(newSelected);\n  // };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  // const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function onDeleteJob(e) {\n    rows = rows[0].filter((n) => n.id !== e.id);\n    setSelected([]);\n\n    window.location.href = \"/#job-list\";\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var req = {\n      id: e.id,\n    };\n    axios\n      .post(\"/api/list/delete\", req, config)\n      .then((res) => {\n        alert(res.data.message);\n        window.location.reload();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setOpen(false);\n  }\n  if (localStorage.getItem(\"type\") !== \"R\") {\n    window.location.href = \"/#404\";\n  }\n\n  //   function fixDate(mydate) {\n  //     var oldDate1 = new Date(mydate);\n  //     oldDate1 = date.format(oldDate1, \" D-MM-YYYY\");\n  //     return oldDate1;\n  //   }\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              // onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows[0], getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  // const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      // component={Paper}\n                      hover\n                      // onClick={(event) => handleClick(event, row.id)}\n                      role=\"checkbox\"\n                      // aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={`${Math.random() + row.title}`}\n                      // selected={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell> */}\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.applicants}</TableCell>\n                      <TableCell align=\"center\">\n                        <Moment format=\"YYYY-MM-DD hh:mm:ss\">\n                          {new Date(row.postedOn)}\n                        </Moment>\n                      </TableCell>\n                      <TableCell align=\"center\">{row.accepted}</TableCell>\n                      <TableCell align=\"center\">{row.deadline}</TableCell>\n                      <TableCell align=\"center\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          size=\"small\"\n                          value=\"delete\"\n                          className={classes.actionBut}\n                          onClick={() => handleClickOpen()}\n                        >\n                          Delete\n                        </Button>\n                        <Link to={{ pathname: \"/edit\", state: { e: row } }}>\n                          <Button\n                            variant=\"contained\"\n                            className={classes.actionBut}\n                            color=\"primary\"\n                            size=\"small\"\n                            value=\"delete\"\n                          >\n                            Edit\n                          </Button>\n                        </Link>\n                        {row.applicants !== 0 ? (\n                          <Link to={`/appls/${row.id}`} >\n                            <Button\n                              variant=\"outlined\"\n                              className={\n                                classes.applicants && classes.actionBut\n                              }\n                              size=\"medium\"\n                            >\n                              Applicants\n                            </Button>\n                          </Link>\n                        ) : (\n                          <Button\n                            variant=\"outlined\"\n                            className={classes.applicants && classes.actionBut}\n                            size=\"medium\"\n                          >\n                            Applicants\n                          </Button>\n                        )}\n                        <AlertDialog row={row} />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n// import Editor from \"nib-core\";\nimport {\n  Container,\n  Typography,\n  makeStyles,\n  TextField,\n  Select,\n  MenuItem,\n  Grid,\n  Chip,\n  Button,\n  Divider,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Snack from \"../common/snack\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport GlobalStyle from \"../Nav/styles/GlobalStyle\";\nimport draftToHtml from \"draftjs-to-html\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    marginTop: \"20px\",\n    minHeight: \"70vh\",\n  },\n  headerTitle: {\n    fontSize: \"1.5rem\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n  quill: {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    minHeight: \"300px\",\n  },\n  selectField: {\n    margin: theme.spacing(1),\n    width: \"25ch\",\n  },\n}));\n\nfunction AddJob() {\n  const classes = useStyles();\n\n  // create empty state for the job title, description, and requirements,applicants_no,experience,salary,skills,location,apply_note,edu_level,level, job categorey,deadline,job type\n  const [jobTitle, setJobTitle] = useState();\n  const [jobRequirements, setJobRequirements] = useState(\n    EditorState.createEmpty()\n  );\n  const [jobApplicantsNo, setJobApplicantsNo] = useState();\n  const [jobExperience, setJobExperience] = useState();\n  const [jobSalary, setJobSalary] = useState();\n  const [skill, setSkill] = useState(\"\");\n  const [jobLocation, setJobLocation] = useState();\n  const [jobApplyNote, setJobApplyNote] = useState();\n  const [jobEduLevel, setJobEduLevel] = useState();\n  const [jobLevel, setJobLevel] = useState();\n  const [jobCategory, setJobCategory] = useState();\n  const [jobDeadline, setJobDeadline] = useState();\n  const [jobType, setJobType] = useState();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [chipData, setChipData] = React.useState([]);\n\n  const [open, setOpen] = useState(false);\n  const [snackMessage, setSnackMessage] = useState(\"\");\n  const [sever, setSever] = useState(\"\");\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleChipData = (e) => {\n    e.preventDefault();\n    const newChip = [...chipData, skill];\n    setChipData(newChip);\n    setSkill(\"\");\n  };\n\n  const handleDelete = (chipToDelete) => () => {\n    setChipData((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n\n  const addJob = (e) => {\n    e.preventDefault();\n    // Get token from local storage\n    var job = {\n      title: jobTitle,\n      description: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n      requirements: draftToHtml(\n        convertToRaw(jobRequirements.getCurrentContent())\n      ),\n      applicant_no: parseInt(jobApplicantsNo),\n      curr_app: 0,\n      accepted: 0,\n      experience: jobExperience,\n      salary: jobSalary,\n      postedOn: new Date(),\n      skills: chipData,\n      job_location: jobLocation,\n      apply_note: jobApplyNote,\n      edu_level: jobEduLevel,\n      level: jobLevel,\n      category: jobCategory,\n      deadline: jobDeadline,\n      type: jobType,\n      rid: localStorage.getItem(\"id\"),\n    };\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n        \"content-type\": \"application/json\",\n        \"Access-Control-Allow-Headers\": \"Origin\",\n      },\n    };\n    // Upload job to the server using axios\n    axios\n      .post(\"/api/list/add\", job, config)\n      .then((res) => {\n        if (res.status === 200) {\n          console.log(\"Job added successfully\");\n          setJobTitle(\"\");\n          setJobRequirements(\"\");\n          setJobApplicantsNo(\"\");\n          setJobExperience(\"\");\n          setJobSalary(\"\");\n          setChipData([]);\n          setJobLocation(\"\");\n          setJobApplyNote(\"\");\n          setJobEduLevel(\"\");\n          setJobLevel(\"\");\n          setJobCategory(\"\");\n          setJobDeadline(\"\");\n          setOpen(true);\n          setSnackMessage(\"Job added successfully\");\n          setSever(\"success\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setOpen(true);\n        setSnackMessage(`Error adding job ${err}`);\n        setSever(\"error\");\n      });\n  };\n  if (localStorage.getItem(\"type\") !== \"R\") {\n    window.location.href = \"/#404\";\n  }\n\n  return (\n    <div className={classes.root}>\n      <GlobalStyle />\n      <Typography className={classes.headerTitle} variant=\"h4\">\n        Add Job\n      </Typography>\n      <Container>\n        <form>\n          <Typography variant=\"h6\">Job Title</Typography>\n          <TextField\n            required\n            placeholder=\"Job Title\"\n            fullWidth\n            variant=\"filled\"\n            id=\"title\"\n            name=\"title\"\n            onChange={(e) => setJobTitle(e.target.value)}\n            value={jobTitle}\n          />\n          <Typography variant=\"h6\">Job Description</Typography>\n          <Paper className={classes.quill}>\n            <Editor\n              editorState={editorState}\n              wrapperClassName=\"demo-wrapper\"\n              editorClassName=\"demo-editor\"\n              onEditorStateChange={setEditorState}\n            />\n          </Paper>\n          <Typography variant=\"h6\">Job Requirements</Typography>\n          <Paper className={classes.quill}>\n            <Editor\n              editorState={jobRequirements}\n              wrapperClassName=\"demo-wrapper\"\n              editorClassName=\"demo-editor\"\n              onEditorStateChange={setJobRequirements}\n            />\n          </Paper>\n          <Typography variant=\"h6\">Job Applicants No</Typography>\n          <TextField\n            required\n            placeholder=\"Job Applicants No\"\n            fullWidth\n            variant=\"filled\"\n            id=\"applicants_no\"\n            name=\"applicants_no\"\n            onChange={(e) => setJobApplicantsNo(e.target.value)}\n            value={jobApplicantsNo}\n          />\n          <Typography variant=\"h6\">Job Experience</Typography>\n\n          {/* option input filed with No experience, 0-1 years,1-2 years, 2-5 years, 5-7 years, 7-10 years, 10+ years as options */}\n          <Select\n            required\n            className={classes.selectField}\n            variant=\"filled\"\n            id=\"experience\"\n            name=\"experience\"\n            onChange={(e) => setJobExperience(e.target.value)}\n            value={jobExperience}\n          >\n            <MenuItem value=\"No experience\">No experience</MenuItem>\n            <MenuItem value=\"0-1 years\">0-1 years</MenuItem>\n            <MenuItem value=\"1-2 years\">1-2 years</MenuItem>\n            <MenuItem value=\"2-5 years\">2-5 years</MenuItem>\n            <MenuItem value=\"5-7 years\">5-7 years</MenuItem>\n            <MenuItem value=\"7-10 years\">7-10 years</MenuItem>\n            <MenuItem value=\"10+ years\">10+ years</MenuItem>\n          </Select>\n\n          <Typography variant=\"h6\">Job Salary</Typography>\n          <TextField\n            required\n            placeholder=\"Job Salary\"\n            fullWidth\n            variant=\"filled\"\n            id=\"salary\"\n            name=\"salary\"\n            onChange={(e) => setJobSalary(e.target.value)}\n            value={jobSalary}\n          />\n          <Typography variant=\"h6\">Job Skills</Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={8}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                value={skill}\n                onChange={(e) => setSkill(e.target.value)}\n                id=\"skills\"\n                label=\"Add Skills\"\n                name=\"skills\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                variant=\"text\"\n                size=\"large\"\n                color=\"secondary\"\n                onClick={(e) => handleChipData(e)}\n              >\n                Add\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper component=\"ul\" className={classes.chipp}>\n                {chipData.map((data) => (\n                  <li key={Math.random() * 56842555 + data}>\n                    <Chip\n                      label={data}\n                      onDelete={handleDelete(data)}\n                      className={classes.chip}\n                    />\n                  </li>\n                ))}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Typography variant=\"h6\">Job Location</Typography>\n          <TextField\n            required\n            placeholder=\"Job Location\"\n            fullWidth\n            variant=\"filled\"\n            id=\"location\"\n            name=\"location\"\n            onChange={(e) => setJobLocation(e.target.value)}\n            value={jobLocation}\n          />\n          <Typography variant=\"h6\">Job Apply Note</Typography>\n          <TextField\n            required\n            placeholder=\"Job Apply Note\"\n            fullWidth\n            variant=\"filled\"\n            id=\"apply_note\"\n            name=\"apply_note\"\n            onChange={(e) => setJobApplyNote(e.target.value)}\n            value={jobApplyNote}\n          />\n          <Typography variant=\"h6\">Job Edu Level</Typography>\n          {/* option input field with Bachelors,Masters,Higher Secondary, Secondary, Primary as options */}\n          <Select\n            required\n            className={classes.selectField}\n            value={jobEduLevel}\n            onChange={(e) => setJobEduLevel(e.target.value)}\n          >\n            <MenuItem value=\"Masters\">Masters</MenuItem>\n            <MenuItem value=\"Bachelors\">Bachelors</MenuItem>\n            <MenuItem value=\"Higher Secondary\">Higher Secondary</MenuItem>\n            <MenuItem value=\"Secondary\">Secondary</MenuItem>\n            <MenuItem value=\"Primary\">Primary</MenuItem>\n          </Select>\n          <Typography variant=\"h6\">Job Level</Typography>\n          {/* option input field with Junior, Mid, Senior as options */}\n          <Select\n            required\n            className={classes.selectField}\n            value={jobLevel}\n            onChange={(e) => setJobLevel(e.target.value)}\n          >\n            <MenuItem value=\"Junior\">Junior</MenuItem>\n            <MenuItem value=\"Intern\">Intern</MenuItem>\n            <MenuItem value=\"Mid\">Mid</MenuItem>\n            <MenuItem value=\"Senior\">Senior</MenuItem>\n          </Select>\n          <Typography variant=\"h6\">Job Category</Typography>\n          <TextField\n            required\n            placeholder=\"Job Categorey\"\n            fullWidth\n            variant=\"filled\"\n            id=\"category\"\n            name=\"category\"\n            onChange={(e) => setJobCategory(e.target.value)}\n            value={jobCategory}\n          />\n          <Typography variant=\"h6\">Job Deadline</Typography>\n          <TextField\n            required\n            placeholder=\"Job Deadline\"\n            fullWidth\n            type=\"date\"\n            variant=\"filled\"\n            id=\"deadline\"\n            name=\"deadline\"\n            onChange={(e) => setJobDeadline(e.target.value)}\n            value={jobDeadline}\n          />\n          <Typography variant=\"h6\">Job Type</Typography>\n          {/* option input field with Full Time, Part Time, Contract as options */}\n          <Select\n            required\n            className={classes.selectField}\n            value={jobType}\n            onChange={(e) => setJobType(e.target.value)}\n          >\n            <MenuItem value=\"Full Time\">Full Time</MenuItem>\n            <MenuItem value=\"Part Time\">Part Time</MenuItem>\n            <MenuItem value=\"Contract\">Contract</MenuItem>\n          </Select>\n          <Divider />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}\n            onClick={(e) => addJob(e)}\n          >\n            Submit\n          </Button>\n        </form>\n      </Container>\n      <Snack\n        handleClose={handleClose}\n        open={open}\n        message={snackMessage}\n        sever={sever}\n      />\n    </div>\n  );\n}\n\nexport default AddJob;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\nimport axios from \"axios\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\n\n//\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Applicant Name\",\n  },\n  {\n    id: \"appliedOn\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Applied On\",\n  },\n  {\n    id: \"Status\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Applicant Status\",\n  },\n  {\n    id: \"email\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Email\",\n  },\n  {\n    id: \"yoe\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Year of EXP\",\n  },\n  {\n    id: \"action\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Action\",\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    // onSelectAllClick,\n    order,\n    orderBy,\n    // numSelected,\n    // rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all jobs\" }}\n          />\n        </TableCell> */}\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            // align={headCell.numeric ? 'left' : 'right'}\n            align=\"center\"\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Jobs List\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    minHeight: \"70vh\",\n    marginTop: \"80px\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  actionBut: {\n    margin: \"10px 10px 10px 10px\",\n  },\n  applicants: {\n    color: \"#32CD32\",\n  },\n}));\n\nexport default function ApplicantList({ state }) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"deadline\");\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [applicants, setApplicants] = React.useState([]);\n\n  const id = useParams().id;\n\n  React.useEffect(() => {\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var req = {\n      cond: {\n        lid: id,\n      },\n    };\n    axios\n      .post(\"/api/appl/view\", req, config)\n      .then((response) => {\n        setApplicants(response.data);\n      })\n      .catch((err) => {\n        if (err) console.log(err);\n      });\n  }, [applicants._id, id]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // const handleSelectAllClick = (event) => {\n  //   if (event.target.checked) {\n  //     const newSelecteds = rows.map((n) => n.id);\n  //     setSelected(newSelecteds);\n  //     return;\n  //   }\n  //   setSelected([]);\n  // };\n\n  // const handleClick = (event, id) => {\n  //   const selectedIndex = selected.indexOf(id);\n  //   let newSelected = [];\n\n  //   if (selectedIndex === -1) {\n  //     newSelected = newSelected.concat(selected, id);\n  //   } else if (selectedIndex === 0) {\n  //     newSelected = newSelected.concat(selected.slice(1));\n  //   } else if (selectedIndex === selected.length - 1) {\n  //     newSelected = newSelected.concat(selected.slice(0, -1));\n  //   } else if (selectedIndex > 0) {\n  //     newSelected = newSelected.concat(\n  //       selected.slice(0, selectedIndex),\n  //       selected.slice(selectedIndex + 1)\n  //     );\n  //   }\n\n  //   setSelected(newSelected);\n  // };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  // const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, applicants.length - page * rowsPerPage);\n\n  function onSetStatus(value, appl) {\n    var config = {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var req = {\n      id: appl._id,\n      oldStatus: appl.Status,\n      set: {\n        Status: value,\n        DateofJoining: new Date(),\n      },\n      lid: appl.lid,\n      uid: appl.uid,\n      name: localStorage.getItem(\"name\"),\n    };\n    axios\n      .post(\"/api/appl/update\", req, config)\n      .then((response) => {\n        alert(response.data);\n        window.location.reload();\n      })\n      .catch((err) => {\n        if (err.response.data) alert(err.response.data);\n      });\n  }\n  //   function fixDate(mydate) {\n  //     var oldDate1 = new Date(mydate);\n  //     oldDate1 = date.format(oldDate1, \" D-MM-YYYY\");\n  //     return oldDate1;\n  //   }\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              // onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={applicants.length}\n            />\n            <TableBody>\n              {stableSort(applicants, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  // const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      // component={Paper}\n                      hover\n                      // onClick={(event) => handleClick(event, row.id)}\n                      role=\"checkbox\"\n                      // aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={`${row.id}`}\n                      // selected={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell> */}\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.user.Name}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {moment(row.appl.applied_on).format(\"YYYY-MM-DD\")}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.appl.Status}</TableCell>\n                      <TableCell align=\"center\">\n                        <a href={`mailto:${row.user.Email}`}>\n                          {\" \"}\n                          {row.user.Email}{\" \"}\n                        </a>\n                      </TableCell>\n                      <TableCell align=\"center\">{row.user.yoe}</TableCell>\n                      {row.appl.Status === \"Pending\" ? (\n                        <TableCell align=\"center\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            value=\"delete\"\n                            className={classes.actionBut}\n                            onClick={() => onSetStatus(\"Rejected\", row.appl)}\n                          >\n                            Reject\n                          </Button>\n                          <Button\n                            variant=\"contained\"\n                            className={classes.actionBut}\n                            color=\"primary\"\n                            size=\"small\"\n                            value=\"shortlist\"\n                            onClick={() => onSetStatus(\"Shortlisted\", row.appl)}\n                          >\n                            Shortlist\n                          </Button>\n                        </TableCell>\n                      ) : row.appl.Status === \"Shortlisted\" ? (\n                        <TableCell align=\"center\">\n                          <Button\n                            variant=\"outlined\"\n                            className={classes.applicants && classes.actionBut}\n                            size=\"medium\"\n                          >\n                            Accept\n                          </Button>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            value=\"delete\"\n                            className={classes.actionBut}\n                            onClick={() => onSetStatus(\"Rejected\", row.appl)}\n                          >\n                            Reject\n                          </Button>\n                        </TableCell>\n                      ) : row.appl.Status === \"Accepted\" ? (\n                        <TableCell align=\"center\">\n                          <Button\n                            variant=\"contained\"\n                            className={classes.applicants && classes.actionBut}\n                            size=\"medium\"\n                          >\n                            Accepted\n                          </Button>\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"center\">\n                          <Button\n                            variant=\"contained\"\n                            className={classes.applicants && classes.actionBut}\n                            size=\"medium\"\n                          >\n                            Rejected\n                          </Button>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={applicants.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  CircularProgress,\n  Container,\n  Table,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableHead,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Moment from \"react-moment\";\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: \"70vh\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"0px\",\n    border: \"none\",\n    boxShadow: \"none\",\n    fontSize: \"1.2em\",\n    fontFamily: \"Roboto, sans-serif\",\n  },\n  list: {\n    listStyle: \"none\",\n    padding: \"0px\",\n    margin: \"0px\",\n    border: \"none\",\n    boxShadow: \"none\",\n    fontSize: \"1.2em\",\n    fontFamily: \"Roboto, sans-serif\",\n  },\n}));\n\nfunction MyApplications(props) {\n  const classes = useStyle();\n  const [apps, setApps] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var req = {\n      cond: { uid: localStorage.getItem(\"id\") },\n    };\n    axios\n      .post(`/api/appl`, req, config)\n      .then((response) => {\n        setApps(response.data);\n        setLoading(false);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [apps._id]);\n\n  if (loading) {\n    return (\n      <Container className={classes.root}>\n        <CircularProgress size={60} />\n      </Container>\n    );\n  }\n\n  return (\n    <Container className={classes.root}>\n      <h1>My Applications</h1>\n      {/* show app job employer, title, status, salary,applied date in condensed table with pagination */}\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Job</TableCell>\n            <TableCell>Employer</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Salary</TableCell>\n            <TableCell>Applied Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {apps.map((app) => (\n            <TableRow key={app._id}>\n              <TableCell>\n                <Link to={`/jobs/${app.lid}`}>{app.title}</Link>\n              </TableCell>\n              <TableCell>{app.name_r}</TableCell>\n              <TableCell>{app.Status}</TableCell>\n              <TableCell>{app.salary}</TableCell>\n              <TableCell>\n                <Moment format=\"MM/DD/YYYY\">{app.date}</Moment>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Container>\n  );\n}\n\nexport default MyApplications;\n\n","import Main from \"../Components/Main\"\r\nimport Login from \"../Components/Login\";\r\nimport JobDescription from \"../Components/JobDescription\";\r\nimport SignUp from \"../Components/SignUp\";\r\nimport a404 from \"../Components/a404\";\r\nimport Jobs from \"../Components/Jobs\";\r\nimport GetInfo from \"../Components/GetInfo\"\r\nimport EditInfo from \"../Components/EditInfo\"\r\nimport Profile from \"../Components/Profile\";\r\nimport JobList from \"../Components/JobList\";\r\nimport AddJob from \"../Components/AddJob\";\r\nimport ApplicantList from \"../Components/ApplicantList\";\r\nimport MyApplications from \"../Components/MyApplications\";\r\n// import ApplicantProfile from \"../Components/ApplicantProfile\"\r\n\r\n\r\nconst routes = [\r\n\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: SignUp\r\n    },\r\n    {\r\n        path: '/jobs/:id',\r\n        component: JobDescription\r\n    },\r\n    {\r\n        path:\"/jobs/\",\r\n        component: Jobs\r\n    },\r\n    {\r\n        path: '/get-info',\r\n        component: GetInfo\r\n    },\r\n    {\r\n        path: '/edit-info',\r\n        component: EditInfo\r\n    },\r\n    {\r\n        path: '/profile',\r\n        component: Profile\r\n    },\r\n       {\r\n        path: '/job-list',\r\n        component: JobList\r\n    },\r\n    {\r\n        path: '/appls/:id',\r\n        component: ApplicantList\r\n    },\r\n    {\r\n        path: '/add-job',\r\n        component: AddJob\r\n    },\r\n    {\r\n        path: '/my-apps',\r\n        component: MyApplications\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Main\r\n    },\r\n\r\n    {\r\n        path: '/**',\r\n        component: a404\r\n    },\r\n\r\n\r\n\r\n]\r\n\r\nexport default routes","import React from \"react\";\r\nimport { Container, Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport LinkM from \"@material-ui/core/Link\";\r\n\r\nimport { Facebook, Instagram, LinkedIn } from \"@material-ui/icons\";\r\nconst useStyle = makeStyles({\r\n  root:{\r\n    gridRowStart: 2,\r\n    gridRowEnd: 3\r\n  },\r\n  list:{\r\n    listStyle:\"none\",\r\n    display:\"inline\"\r\n  }\r\n})\r\nconst Footer = () => {\r\nconst classes = useStyle()\r\n  return (\r\n    <Paper id=\"footer\" style={{ marginTop: \"30px\" }}>\r\n      <Container className=\"tata\">\r\n        <Grid container>\r\n          <Grid item lg={4}>\r\n            <Typography variant=\"h6\" component=\"strong\" color=\"textSecondary\" className=\"\">Our Address:</Typography>\r\n            <p className=\"text-muted f-14\">\r\n              Butwal, {\"\\n\"} Milanchwok,Rupandehi {\"\\n\"} Nepal\r\n            </p>\r\n            <Typography variant=\"subtitle1\" component=\"div\" color=\"textSecondary\" className=\"\">Email: <LinkM href=\"mailto:applyjob@gmail.com\"> applyjob@gmail.com</LinkM></Typography>\r\n            <ul className={classes.list}>\r\n              <li className={classes.list}>\r\n                <LinkM href=\"https://www.facebook.com/Rupandehijobpvtltd\">\r\n                  <Facebook />\r\n                </LinkM>\r\n              </li>\r\n              <li className={classes.list}>\r\n                <LinkM href=\"https://instagram.com\">\r\n                  <Instagram />\r\n                </LinkM>\r\n              </li>\r\n              <li className={classes.list}>\r\n                <LinkM href=\"https://linkedin.com\">\r\n                  <LinkedIn />\r\n                </LinkM>\r\n              </li>\r\n            </ul>\r\n          </Grid>\r\n          <Grid item md={5}>\r\n            <p>© Rupandehi Job 2021</p>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Paper>\r\n\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const data = {\r\n  main: {\r\n    nav: {\r\n      name: \"Logo\",\r\n      name2: \"Logonav\",\r\n      items: [\r\n        {\r\n          name: \"Home\",\r\n          link: \"/\"\r\n        },\r\n        {\r\n          name: \"About\",\r\n          link: \"/about-us\"\r\n\r\n        },\r\n        {\r\n          name: \"Trainings\",\r\n          link: \"/training\"\r\n\r\n        },\r\n        {\r\n          name: \"Login\",\r\n          link: \"/login\"\r\n\r\n        },\r\n\r\n        // {\r\n        //   name: \"\",\r\n        //   link: \"/\"\r\n\r\n        // },\r\n      ],\r\n      icons: [\r\n        {\r\n          name: \"IconHamburger\",\r\n        },\r\n        { name: \"IconClose\" },\r\n      ],\r\n    },\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport MainContext from \"./mainContext\";\r\nimport { data } from \"../data\";\r\n\r\nconst MainState = (props) => {\r\n  const [state, setState] = useState(data.main);\r\n\r\n  return (\r\n    <MainContext.Provider value={{ data: state, setState }}>\r\n      {props.children}\r\n    </MainContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MainState;\r\n","import { useEffect, useMemo, useState } from \"react\";\nimport Nav from \"./Components/Nav/\";\nimport routes from \"./config/routes.js\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Footer from \"./Components/Footer\";\n// import { GlobalStyle } from \"./Components/Nav/styles\";\nimport MainState from \"./Components/Nav/context/mainState\";\nimport {\n  makeStyles,\n  CssBaseline,\n  useMediaQuery,\n  Paper,\n} from \"@material-ui/core\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\n\nconst useStyle = makeStyles({\n  root: {\n    minHeight: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  main: {\n    flex: 1,\n    padding: \"50px\",\n  },\n  footer: {\n    marginTop: \"auto\",\n    alignSelf: \"flex-end\",\n    height: \"50px\",\n  },\n});\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const classes = useStyle();\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n  const [LoggedIn, setLoggedIn] = useState(false);\n  const [userType, setUserType] = useState(\"\");\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    let config = {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    };\n    if (token) {\n      axios\n        .get(\"/api/user/auth\", config)\n        .then((response) => {\n          if (response.data) {\n            setUserType(response.data.type);\n            if (response.data.type.length > 0) {\n              setLoggedIn(true);\n              localStorage.setItem(\"loggedIn\", true);\n              console.log(LoggedIn);\n            }\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [LoggedIn, userType]);\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Paper>\n          <MainState>\n            <div className={classes.root} div>\n              <div item>\n                <Nav LoggedIn={LoggedIn} user_type={userType} />\n              </div>\n              <div item className={classes.main}>\n                <Switch>\n                  {routes.map((route) => (\n                    <Route\n                      exact\n                      key={route.path}\n                      path={route.path}\n                      component={route.component}\n                    />\n                  ))}\n                </Switch>\n              </div>\n              <div item>\n                <Footer className={classes.footer} />\n              </div>\n            </div>\n          </MainState>\n        </Paper>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}